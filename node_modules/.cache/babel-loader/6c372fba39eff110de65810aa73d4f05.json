{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/DataTable.js\";\nimport React, { useState } from 'react';\nimport _ from 'lodash';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginBottom: theme.spacing(2),\n    width: '100%'\n  },\n  root: {\n    width: '100%'\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport function DataTable({\n  headCells,\n  rowCells\n}) {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [page, setPage] = useState(0);\n  const pageSizes = [10, 25, 50];\n  const [rowsPerPage, setRowsPerPage] = useState(pageSizes[0]);\n\n  const _requestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const _changePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const _changeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rowCells.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"small\",\n    \"aria-label\": \"data table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DataTableHead, {\n    cells: headCells,\n    classes: classes,\n    onRequestSort: _requestSort,\n    order: order,\n    orderBy: orderBy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, _.orderBy(rowCells, [orderBy], [order]).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(({\n    active,\n    cases,\n    country,\n    deaths,\n    recovered\n  }) => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    key: country,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, country), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, active), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, deaths), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, recovered), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, cases))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 33 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: pageSizes,\n    component: \"nav\",\n    count: rowCells.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: _changePage,\n    onChangeRowsPerPage: _changeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction DataTableHead({\n  cells,\n  classes,\n  onRequestSort,\n  order,\n  orderBy\n}) {\n  const _createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, cells.map(({\n    id,\n    label\n  }, index) => /*#__PURE__*/React.createElement(TableCell, {\n    align: index === 0 ? 'left' : 'right',\n    key: id,\n    sortDirection: orderBy === id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === id,\n    direction: orderBy === id ? order : 'asc',\n    onClick: _createSortHandler(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, label, orderBy === id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/DataTable.js"],"names":["React","useState","_","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","makeStyles","useStyles","theme","paper","marginBottom","spacing","width","root","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","DataTable","headCells","rowCells","classes","order","setOrder","orderBy","setOrderBy","page","setPage","pageSizes","rowsPerPage","setRowsPerPage","_requestSort","event","property","isAsc","_changePage","newPage","_changeRowsPerPage","parseInt","target","value","emptyRows","Math","min","length","slice","map","active","cases","country","deaths","recovered","DataTableHead","cells","onRequestSort","_createSortHandler","id","label","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport _ from 'lodash';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginBottom: theme.spacing(2),\n    width: '100%',\n  },\n  root: {\n    width: '100%',\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport function DataTable({ headCells, rowCells }) {\n  const classes = useStyles();\n\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [page, setPage] = useState(0);\n  const pageSizes = [10, 25, 50];\n  const [rowsPerPage, setRowsPerPage] = useState(pageSizes[0]);\n\n  const _requestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const _changePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const _changeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rowCells.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            aria-label=\"data table\"\n          >\n            <DataTableHead\n              cells={headCells}\n              classes={classes}\n              onRequestSort={_requestSort}\n              order={order}\n              orderBy={orderBy}\n            />\n            <TableBody>\n              {_.orderBy(rowCells, [orderBy], [order])\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(({ active, cases, country, deaths, recovered }) => (\n                  <TableRow hover key={country} tabIndex={-1}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {country}\n                    </TableCell>\n                    <TableCell align=\"right\">{active}</TableCell>\n                    <TableCell align=\"right\">{deaths}</TableCell>\n                    <TableCell align=\"right\">{recovered}</TableCell>\n                    <TableCell align=\"right\">{cases}</TableCell>\n                  </TableRow>\n                ))}\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          rowsPerPageOptions={pageSizes}\n          component=\"nav\"\n          count={rowCells.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={_changePage}\n          onChangeRowsPerPage={_changeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nfunction DataTableHead({ cells, classes, onRequestSort, order, orderBy }) {\n  const _createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {cells.map(({ id, label }, index) => (\n          <TableCell\n            align={index === 0 ? 'left' : 'right'}\n            key={id}\n            sortDirection={orderBy === id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === id}\n              direction={orderBy === id ? order : 'asc'}\n              onClick={_createSortHandler(id)}\n            >\n              {label}\n              {orderBy === id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}