{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/Dashboard.js\";\nimport React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  //   container: {\n  //     padding: 0,\n  //     height: '100%',\n  //     width: '100%',\n  //   },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden'\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  root: {\n    display: 'flex'\n  },\n  title: {\n    flexGrow: 1\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  }\n}));\nexport function Dashboard({\n  children\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const _openDrawer = () => {\n    setOpen(true);\n  };\n\n  const _closeDrawer = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    className: clsx(classes.appBar, open && classes.appBarShift),\n    position: \"absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"open drawer\",\n    className: clsx(classes.menuButton, open && classes.menuButtonHidden),\n    color: \"inherit\",\n    edge: \"start\",\n    onClick: _openDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    component: \"h1\",\n    noWrap: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"COVID-19 Tracker\"))), /*#__PURE__*/React.createElement(Drawer, {\n    classes: {\n      paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n    },\n    open: open,\n    variant: \"permanent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbarIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: _closeDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appBarSpacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), children));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/Dashboard.js"],"names":["React","useState","AppBar","Container","CssBaseline","Drawer","Grid","IconButton","Link","Toolbar","Typography","makeStyles","ChevronLeftIcon","MenuIcon","clsx","drawerWidth","useStyles","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","appBarSpacer","mixins","toolbar","content","flexGrow","height","overflow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","menuButton","marginRight","menuButtonHidden","display","root","title","paddingRight","toolbarIcon","alignItems","justifyContent","padding","Dashboard","children","classes","open","setOpen","_openDrawer","_closeDrawer","paper"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport clsx from 'clsx';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  //   container: {\n  //     padding: 0,\n  //     height: '100%',\n  //     width: '100%',\n  //   },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden',\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  root: {\n    display: 'flex',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport function Dashboard({ children }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const _openDrawer = () => {\n    setOpen(true);\n  };\n  const _closeDrawer = () => {\n    setOpen(false);\n  };\n  return (\n    <article className={classes.root}>\n      <CssBaseline />\n\n      <AppBar\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n        position=\"absolute\"\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            aria-label=\"open drawer\"\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden,\n            )}\n            color=\"inherit\"\n            edge=\"start\"\n            onClick={_openDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            className={classes.title}\n            color=\"inherit\"\n            component=\"h1\"\n            noWrap\n            variant=\"h6\"\n          >\n            COVID-19 Tracker\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n        variant=\"permanent\"\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={_closeDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n      </Drawer>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {/* <Container className={classes.container} maxWidth=\"lg\"> */}\n        {/* <Grid container spacing={3}> */}\n        {children}\n        {/* </Grid> */}\n        {/* </Container> */}\n      </main>\n    </article>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}