{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.js\";\nimport React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport logo from \"./logo.svg\";\nimport { CountCard } from './CountCard';\nimport { usePageTemplateStyles } from './PageTemplate.styles';\nexport function PageTemplate({\n  children,\n  totals\n}) {\n  const classes = usePageTemplateStyles();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const _toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  const renderedTotals = [{\n    count: totals.active,\n    countColor: red[500],\n    id: 'total--active',\n    prevCount: totals.prevActive,\n    title: 'Active Cases'\n  }, {\n    count: totals.deaths,\n    countColor: yellow[500],\n    id: 'total--deaths',\n    prevCount: totals.prevDeaths,\n    title: 'Deaths'\n  }, {\n    count: totals.recovered,\n    countColor: green[400],\n    id: 'total--recovered',\n    prevCount: totals.prevRecovered,\n    title: 'Recovered'\n  }, {\n    count: totals.cases,\n    countColor: grey[100],\n    id: 'total--cases',\n    prevCount: totals.prevCases,\n    title: 'Total Confirmed'\n  }];\n  const drawerContent = /*#__PURE__*/React.createElement(React.Fragment, null, renderedTotals.map(({\n    id,\n    ...data\n  }) => /*#__PURE__*/React.createElement(CountCard, Object.assign({\n    key: id\n  }, data, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }))), totals.updated && /*#__PURE__*/React.createElement(Typography, {\n    className: classes.lastUpdated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, `Last Update: ${moment(totals.updated).format('MM/DD/YYYY')} at\n                ${moment(totals.updated).format('h:mmA')}`));\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    className: clsx(classes.appBar, isDrawerOpen && classes.appBarShift),\n    position: \"absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"open drawer\",\n    className: clsx(classes.menuButton, isDrawerOpen && classes.menuButtonHidden),\n    color: \"inherit\",\n    edge: \"start\",\n    onClick: _toggleDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"COVID-19\",\n    className: classes.logo,\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"nav\", {\n    className: classes.drawer,\n    \"aria-label\": \"site navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Used for better performance on mobile\n\n    },\n    onClose: _toggleDrawer,\n    onOpen: _toggleDrawer,\n    open: isDrawerOpen,\n    variant: \"temporary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, drawerContent)), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    open: true,\n    variant: \"permanent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, drawerContent))), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appBarSpacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), children));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.js"],"names":["React","useState","AppBar","CssBaseline","Drawer","Hidden","IconButton","MenuIcon","SwipeableDrawer","Toolbar","Typography","green","grey","red","yellow","clsx","moment","CountCard","usePageTemplateStyles","PageTemplate","children","totals","classes","isDrawerOpen","setIsDrawerOpen","_toggleDrawer","renderedTotals","count","active","countColor","id","prevCount","prevActive","title","deaths","prevDeaths","recovered","prevRecovered","cases","prevCases","drawerContent","map","data","updated","lastUpdated","format","root","appBar","appBarShift","toolbar","menuButton","menuButtonHidden","logo","drawer","paper","drawerPaper","keepMounted","content","appBarSpacer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport clsx from 'clsx';\nimport moment from 'moment';\n\nimport logo from './logo.svg';\nimport { CountCard } from './CountCard';\nimport { usePageTemplateStyles } from './PageTemplate.styles';\n\nexport function PageTemplate({ children, totals }) {\n  const classes = usePageTemplateStyles();\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const _toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  const renderedTotals = [\n    {\n      count: totals.active,\n      countColor: red[500],\n      id: 'total--active',\n      prevCount: totals.prevActive,\n      title: 'Active Cases',\n    },\n    {\n      count: totals.deaths,\n      countColor: yellow[500],\n      id: 'total--deaths',\n      prevCount: totals.prevDeaths,\n      title: 'Deaths',\n    },\n    {\n      count: totals.recovered,\n      countColor: green[400],\n      id: 'total--recovered',\n      prevCount: totals.prevRecovered,\n      title: 'Recovered',\n    },\n    {\n      count: totals.cases,\n      countColor: grey[100],\n      id: 'total--cases',\n      prevCount: totals.prevCases,\n      title: 'Total Confirmed',\n    },\n  ];\n\n  const drawerContent = (\n    <>\n      {renderedTotals.map(({ id, ...data }) => (\n        <CountCard key={id} {...data} />\n      ))}\n\n      {totals.updated && (\n        <Typography className={classes.lastUpdated}>\n          {`Last Update: ${moment(totals.updated).format('MM/DD/YYYY')} at\n                ${moment(totals.updated).format('h:mmA')}`}\n        </Typography>\n      )}\n    </>\n  );\n\n  return (\n    <article className={classes.root}>\n      <CssBaseline />\n\n      <AppBar\n        className={clsx(classes.appBar, isDrawerOpen && classes.appBarShift)}\n        position=\"absolute\"\n      >\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdUp>\n            <IconButton\n              aria-label=\"open drawer\"\n              className={clsx(\n                classes.menuButton,\n                isDrawerOpen && classes.menuButtonHidden,\n              )}\n              color=\"inherit\"\n              edge=\"start\"\n              onClick={_toggleDrawer}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n\n          <img alt=\"COVID-19\" className={classes.logo} src={logo} />\n        </Toolbar>\n      </AppBar>\n\n      <nav className={classes.drawer} aria-label=\"site navigation\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden mdUp implementation=\"css\">\n          <SwipeableDrawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Used for better performance on mobile\n            }}\n            onClose={_toggleDrawer}\n            onOpen={_toggleDrawer}\n            open={isDrawerOpen}\n            variant=\"temporary\"\n          >\n            {drawerContent}\n          </SwipeableDrawer>\n        </Hidden>\n\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            open\n            variant=\"permanent\"\n          >\n            {drawerContent}\n          </Drawer>\n        </Hidden>\n      </nav>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {children}\n      </main>\n    </article>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}