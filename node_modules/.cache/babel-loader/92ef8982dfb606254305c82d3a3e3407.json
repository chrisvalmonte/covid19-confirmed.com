{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/Map.js\";\nimport React, { Component } from 'react';\nimport MapGL, { Layer, Source } from 'react-map-gl';\nimport { clusterCountLayer, clusterLayer, unclusteredPointLayer } from './Map.layers';\nexport class Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        latitude: 40.67,\n        longitude: -103.59,\n        zoom: 3,\n        bearing: 0,\n        pitch: 0\n      }\n    };\n    this._sourceRef = React.createRef();\n\n    this._onViewportChange = viewport => this.setState({\n      viewport\n    });\n\n    this._onClick = event => {\n      const feature = event.features[0];\n      const clusterId = feature.properties.cluster_id;\n\n      const mapboxSource = this._sourceRef.current.getSource();\n\n      mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n        if (err) {\n          return;\n        }\n\n        this._onViewportChange({ ...this.state.viewport,\n          longitude: feature.geometry.coordinates[0],\n          latitude: feature.geometry.coordinates[1],\n          zoom,\n          transitionDuration: 500\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      viewport\n    } = this.state;\n    return /*#__PURE__*/React.createElement(MapGL, Object.assign({}, viewport, {\n      width: \"100%\",\n      height: \"100%\",\n      mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n      onViewportChange: this._onViewportChange,\n      mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_GL_API_TOKEN,\n      interactiveLayerIds: [clusterLayer.id],\n      onClick: this._onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Source, {\n      type: \"geojson\",\n      data: \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\",\n      cluster: true,\n      clusterMaxZoom: 14,\n      clusterRadius: 50,\n      ref: this._sourceRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Layer, Object.assign({}, clusterLayer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Layer, Object.assign({}, clusterCountLayer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Layer, Object.assign({}, unclusteredPointLayer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/Map.js"],"names":["React","Component","MapGL","Layer","Source","clusterCountLayer","clusterLayer","unclusteredPointLayer","Map","state","viewport","latitude","longitude","zoom","bearing","pitch","_sourceRef","createRef","_onViewportChange","setState","_onClick","event","feature","features","clusterId","properties","cluster_id","mapboxSource","current","getSource","getClusterExpansionZoom","err","geometry","coordinates","transitionDuration","render","process","env","REACT_APP_MAPBOX_GL_API_TOKEN","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,IAAgBC,KAAhB,EAAuBC,MAAvB,QAAqC,cAArC;AAEA,SACEC,iBADF,EAEEC,YAFF,EAGEC,qBAHF,QAIO,cAJP;AAMA,OAAO,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCQ,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,KADF;AAERC,QAAAA,SAAS,EAAE,CAAC,MAFJ;AAGRC,QAAAA,IAAI,EAAE,CAHE;AAIRC,QAAAA,OAAO,EAAE,CAJD;AAKRC,QAAAA,KAAK,EAAE;AALC;AADJ,KADyB;AAAA,SAWjCC,UAXiC,GAWpBhB,KAAK,CAACiB,SAAN,EAXoB;;AAAA,SAajCC,iBAbiC,GAabR,QAAQ,IAAI,KAAKS,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd,CAbC;;AAAA,SAejCU,QAfiC,GAetBC,KAAK,IAAI;AAClB,YAAMC,OAAO,GAAGD,KAAK,CAACE,QAAN,CAAe,CAAf,CAAhB;AACA,YAAMC,SAAS,GAAGF,OAAO,CAACG,UAAR,CAAmBC,UAArC;;AAEA,YAAMC,YAAY,GAAG,KAAKX,UAAL,CAAgBY,OAAhB,CAAwBC,SAAxB,EAArB;;AAEAF,MAAAA,YAAY,CAACG,uBAAb,CAAqCN,SAArC,EAAgD,CAACO,GAAD,EAAMlB,IAAN,KAAe;AAC7D,YAAIkB,GAAJ,EAAS;AACP;AACD;;AAED,aAAKb,iBAAL,CAAuB,EACrB,GAAG,KAAKT,KAAL,CAAWC,QADO;AAErBE,UAAAA,SAAS,EAAEU,OAAO,CAACU,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CAFU;AAGrBtB,UAAAA,QAAQ,EAAEW,OAAO,CAACU,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CAHW;AAIrBpB,UAAAA,IAJqB;AAKrBqB,UAAAA,kBAAkB,EAAE;AALC,SAAvB;AAOD,OAZD;AAaD,KAlCgC;AAAA;;AAoCjCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACE,oBAAC,KAAD,oBACMC,QADN;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,MAAM,EAAC,MAHT;AAIE,MAAA,QAAQ,EAAC,gCAJX;AAKE,MAAA,gBAAgB,EAAE,KAAKQ,iBALzB;AAME,MAAA,oBAAoB,EAAEkB,OAAO,CAACC,GAAR,CAAYC,6BANpC;AAOE,MAAA,mBAAmB,EAAE,CAAChC,YAAY,CAACiC,EAAd,CAPvB;AAQE,MAAA,OAAO,EAAE,KAAKnB,QARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAUE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAC,iEAFP;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,cAAc,EAAE,EAJlB;AAKE,MAAA,aAAa,EAAE,EALjB;AAME,MAAA,GAAG,EAAE,KAAKJ,UANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,KAAD,oBAAWV,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARF,eASE,oBAAC,KAAD,oBAAWD,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATF,eAUE,oBAAC,KAAD,oBAAWE,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVF,CAVF,CADF;AAyBD;;AAhEgC","sourcesContent":["import React, { Component } from 'react';\nimport MapGL, { Layer, Source } from 'react-map-gl';\n\nimport {\n  clusterCountLayer,\n  clusterLayer,\n  unclusteredPointLayer,\n} from './Map.layers';\n\nexport class Map extends Component {\n  state = {\n    viewport: {\n      latitude: 40.67,\n      longitude: -103.59,\n      zoom: 3,\n      bearing: 0,\n      pitch: 0,\n    },\n  };\n\n  _sourceRef = React.createRef();\n\n  _onViewportChange = viewport => this.setState({ viewport });\n\n  _onClick = event => {\n    const feature = event.features[0];\n    const clusterId = feature.properties.cluster_id;\n\n    const mapboxSource = this._sourceRef.current.getSource();\n\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n      if (err) {\n        return;\n      }\n\n      this._onViewportChange({\n        ...this.state.viewport,\n        longitude: feature.geometry.coordinates[0],\n        latitude: feature.geometry.coordinates[1],\n        zoom,\n        transitionDuration: 500,\n      });\n    });\n  };\n\n  render() {\n    const { viewport } = this.state;\n\n    return (\n      <MapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        onViewportChange={this._onViewportChange}\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_GL_API_TOKEN}\n        interactiveLayerIds={[clusterLayer.id]}\n        onClick={this._onClick}\n      >\n        <Source\n          type=\"geojson\"\n          data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\n          cluster={true}\n          clusterMaxZoom={14}\n          clusterRadius={50}\n          ref={this._sourceRef}\n        >\n          <Layer {...clusterLayer} />\n          <Layer {...clusterCountLayer} />\n          <Layer {...unclusteredPointLayer} />\n        </Source>\n      </MapGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}