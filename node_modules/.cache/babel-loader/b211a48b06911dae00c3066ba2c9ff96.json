{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/DataTable.js\";\nimport React, { useState } from 'react';\nimport _ from 'lodash';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst headCells = [{\n  id: 'name',\n  label: 'Dessert (100g serving)'\n}, {\n  id: 'calories',\n  label: 'Calories'\n}, {\n  id: 'fat',\n  label: 'Fat (g)'\n}, {\n  id: 'carbs',\n  label: 'Carbs (g)'\n}, {\n  id: 'protein',\n  label: 'Protein (g)'\n}];\nconst rows = [createData('Cupcake', 305, 3.7, 67, 4.3), createData('Donut', 452, 25.0, 51, 4.9), createData('Eclair', 262, 16.0, 24, 6.0), createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Gingerbread', 356, 16.0, 49, 3.9), createData('Honeycomb', 408, 3.2, 87, 6.5), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Jelly Bean', 375, 0.0, 94, 0.0), createData('KitKat', 518, 26.0, 65, 7.0), createData('Lollipop', 392, 0.2, 98, 0.0), createData('Marshmallow', 318, 0, 81, 2.0), createData('Nougat', 360, 19.0, 9, 37.0), createData('Oreo', 437, 18.0, 63, 4.0)];\n\nfunction DataTableHead({\n  classes,\n  onRequestSort,\n  order,\n  orderBy\n}) {\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, headCells.map(({\n    id,\n    label\n  }, index) => /*#__PURE__*/React.createElement(TableCell, {\n    align: index === 0 ? 'left' : 'right',\n    key: id,\n    sortDirection: orderBy === id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === id,\n    direction: orderBy === id ? order : 'asc',\n    onClick: createSortHandler(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, label, orderBy === id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginBottom: theme.spacing(2),\n    width: '100%'\n  },\n  root: {\n    width: '100%'\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport function DataTable() {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [page, setPage] = useState(0);\n  const pageSizes = [10, 25, 50];\n  const [rowsPerPage, setRowsPerPage] = useState(pageSizes[0]);\n\n  const _requestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const _changePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const _changeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"small\",\n    \"aria-label\": \"data table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DataTableHead, {\n    classes: classes,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: _requestSort,\n    rowCount: rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, _.orderBy(rows, [orderBy], [order]).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(({\n    calories,\n    carbs,\n    fat,\n    name,\n    protein\n  }) => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    key: name,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, calories), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, fat), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, carbs), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, protein))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 33 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: pageSizes,\n    component: \"nav\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: _changePage,\n    onChangeRowsPerPage: _changeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/DataTable.js"],"names":["React","useState","_","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","makeStyles","createData","name","calories","fat","carbs","protein","headCells","id","label","rows","DataTableHead","classes","onRequestSort","order","orderBy","createSortHandler","property","event","map","index","visuallyHidden","useStyles","theme","paper","marginBottom","spacing","width","root","table","minWidth","border","clip","height","margin","overflow","padding","position","top","DataTable","setOrder","setOrderBy","page","setPage","pageSizes","rowsPerPage","setRowsPerPage","_requestSort","isAsc","_changePage","newPage","_changeRowsPerPage","parseInt","target","value","emptyRows","Math","min","length","slice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport _ from 'lodash';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst headCells = [\n  {\n    id: 'name',\n    label: 'Dessert (100g serving)',\n  },\n  { id: 'calories', label: 'Calories' },\n  { id: 'fat', label: 'Fat (g)' },\n  { id: 'carbs', label: 'Carbs (g)' },\n  { id: 'protein', label: 'Protein (g)' },\n];\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction DataTableHead({ classes, onRequestSort, order, orderBy }) {\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(({ id, label }, index) => (\n          <TableCell\n            align={index === 0 ? 'left' : 'right'}\n            key={id}\n            sortDirection={orderBy === id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === id}\n              direction={orderBy === id ? order : 'asc'}\n              onClick={createSortHandler(id)}\n            >\n              {label}\n              {orderBy === id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginBottom: theme.spacing(2),\n    width: '100%',\n  },\n  root: {\n    width: '100%',\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport function DataTable() {\n  const classes = useStyles();\n\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [page, setPage] = useState(0);\n  const pageSizes = [10, 25, 50];\n  const [rowsPerPage, setRowsPerPage] = useState(pageSizes[0]);\n\n  const _requestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const _changePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const _changeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            aria-label=\"data table\"\n          >\n            <DataTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={_requestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {_.orderBy(rows, [orderBy], [order])\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(({ calories, carbs, fat, name, protein }) => (\n                  <TableRow hover key={name} tabIndex={-1}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {name}\n                    </TableCell>\n                    <TableCell align=\"right\">{calories}</TableCell>\n                    <TableCell align=\"right\">{fat}</TableCell>\n                    <TableCell align=\"right\">{carbs}</TableCell>\n                    <TableCell align=\"right\">{protein}</TableCell>\n                  </TableRow>\n                ))}\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          rowsPerPageOptions={pageSizes}\n          component=\"nav\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={_changePage}\n          onChangeRowsPerPage={_changeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}