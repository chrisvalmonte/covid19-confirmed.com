{"ast":null,"code":"import _regeneratorRuntime from\"/Users/chris/Desktop/covid19-confirmed/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/chris/Desktop/covid19-confirmed/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/chris/Desktop/covid19-confirmed/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/chris/Desktop/covid19-confirmed/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect,useRef,useState}from'react';import Container from'@material-ui/core/Container';import Divider from'@material-ui/core/Divider';import Grid from'@material-ui/core/Grid';import Paper from'@material-ui/core/Paper';import RootRef from'@material-ui/core/RootRef';import Typography from'@material-ui/core/Typography';import grey from'@material-ui/core/colors/grey';import{makeStyles}from'@material-ui/core/styles';import DataTable from'./DataTable';import HistoryChart from'./HistoryChart';import{getCountries,getHistory}from'./services';import{rootStyles}from'./App';var historyChartContainerPadding=8;// 8px\nvar useStyles=makeStyles(function(){return{divider:{marginBottom:'16px'},header:{marginBottom:'12px'},historyChartContainer:{padding:\"\".concat(historyChartContainerPadding,\"px\")},root:_objectSpread({},rootStyles,{backgroundColor:grey[100]}),temp:{marginTop:'50px',textAlign:'center'}};});export default function Dashboard(){var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countryTableBodyRows=_useState2[0],setCountryTableBodyRows=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),todayTableBodyRows=_useState4[0],setTodayTableBodyRows=_useState4[1];var todayTableRef=useRef(null);var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),history=_useState6[0],setHistory=_useState6[1];// Get data for tables and charts when component mounts\nuseEffect(function(){var _countryData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$getCountries,data,countryTableData,todayTableData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getCountries();case 2:_yield$getCountries=_context.sent;data=_yield$getCountries.data;countryTableData=data.map(function(_ref2){var active=_ref2.active,cases=_ref2.cases,country=_ref2.country,deaths=_ref2.deaths,recovered=_ref2.recovered;return{id:country,country:country,active:active,deaths:deaths,recovered:recovered,cases:cases};});setCountryTableBodyRows(countryTableData);todayTableData=data.map(function(_ref3){var country=_ref3.country,todayCases=_ref3.todayCases,todayDeaths=_ref3.todayDeaths;return{id:country,country:country,todayDeaths:todayDeaths,todayCases:todayCases};});setTodayTableBodyRows(todayTableData);case 8:case\"end\":return _context.stop();}}},_callee);}));return function _countryData(){return _ref.apply(this,arguments);};}();var _historyData=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$getHistory,data,historyChartData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getHistory();case 2:_yield$getHistory=_context2.sent;data=_yield$getHistory.data;// TODO: Make graph dynamic. Add date and country filters\nhistoryChartData=data.filter(function(_ref5){var country=_ref5.country;return country==='usa';});setHistory(historyChartData);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function _historyData(){return _ref4.apply(this,arguments);};}();_countryData();_historyData();},[]);// eslint-disable-line\nvar countryTableHeadCells=[{id:'country',label:'Country'},{id:'active',label:'Active Cases'},{id:'deaths',label:'Deaths'},{id:'recovered',label:'Recovered'},{id:'cases',label:'Total Confirmed'}];var todayTableHeadCells=[{id:'country',label:'Country'},{id:'todayDeaths',label:'Deaths'},{id:'todayCases',label:'Cases'}];return/*#__PURE__*/React.createElement(\"article\",{className:classes.root},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:5},/*#__PURE__*/React.createElement(DashboardHeader,null,\"Confirmed Today\"),/*#__PURE__*/React.createElement(RootRef,{rootRef:todayTableRef},/*#__PURE__*/React.createElement(DataTable,{bodyRows:todayTableBodyRows,headCells:todayTableHeadCells,initialOrder:\"desc\",initialOrderBy:\"todayCases\"}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:7},/*#__PURE__*/React.createElement(DashboardHeader,null,\"USA Case History\"),/*#__PURE__*/React.createElement(Paper,{className:classes.historyChartContainer},/*#__PURE__*/React.createElement(HistoryChart,{height:todayTableRef.current?todayTableRef.current.offsetHeight-historyChartContainerPadding*2:300,history:history}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(DashboardHeader,null,\"Country Overview\"),/*#__PURE__*/React.createElement(DataTable,{bodyRows:countryTableBodyRows,headCells:countryTableHeadCells,initialOrder:\"desc\",initialOrderBy:\"active\"})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Typography,{className:classes.temp,component:\"h3\",variant:\"h6\"},\"More insights coming soon...\")))));}function DashboardHeader(_ref6){var children=_ref6.children;var classes=useStyles();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Typography,{className:classes.header,component:\"h2\",variant:\"h5\"},children),/*#__PURE__*/React.createElement(Divider,{className:classes.divider}));}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/Dashboard.js"],"names":["React","useEffect","useRef","useState","Container","Divider","Grid","Paper","RootRef","Typography","grey","makeStyles","DataTable","HistoryChart","getCountries","getHistory","rootStyles","historyChartContainerPadding","useStyles","divider","marginBottom","header","historyChartContainer","padding","root","backgroundColor","temp","marginTop","textAlign","Dashboard","classes","countryTableBodyRows","setCountryTableBodyRows","todayTableBodyRows","setTodayTableBodyRows","todayTableRef","history","setHistory","_countryData","data","countryTableData","map","active","cases","country","deaths","recovered","id","todayTableData","todayCases","todayDeaths","_historyData","historyChartData","filter","countryTableHeadCells","label","todayTableHeadCells","current","offsetHeight","DashboardHeader","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport RootRef from '@material-ui/core/RootRef';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DataTable from './DataTable';\nimport HistoryChart from './HistoryChart';\nimport { getCountries, getHistory } from './services';\nimport { rootStyles } from './App';\n\nconst historyChartContainerPadding = 8; // 8px\n\nconst useStyles = makeStyles(() => ({\n  divider: {\n    marginBottom: '16px',\n  },\n  header: {\n    marginBottom: '12px',\n  },\n  historyChartContainer: {\n    padding: `${historyChartContainerPadding}px`,\n  },\n  root: {\n    ...rootStyles,\n    backgroundColor: grey[100],\n  },\n  temp: {\n    marginTop: '50px',\n    textAlign: 'center',\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  const [countryTableBodyRows, setCountryTableBodyRows] = useState([]);\n  const [todayTableBodyRows, setTodayTableBodyRows] = useState([]);\n  const todayTableRef = useRef(null);\n  const [history, setHistory] = useState([]);\n\n  // Get data for tables and charts when component mounts\n  useEffect(() => {\n    const _countryData = async () => {\n      const { data } = await getCountries();\n\n      const countryTableData = data.map(\n        ({ active, cases, country, deaths, recovered }) => ({\n          id: country,\n          country,\n          active,\n          deaths,\n          recovered,\n          cases,\n        }),\n      );\n      setCountryTableBodyRows(countryTableData);\n\n      const todayTableData = data.map(\n        ({ country, todayCases, todayDeaths }) => ({\n          id: country,\n          country,\n          todayDeaths,\n          todayCases,\n        }),\n      );\n      setTodayTableBodyRows(todayTableData);\n    };\n\n    const _historyData = async () => {\n      const { data } = await getHistory();\n\n      // TODO: Make graph dynamic. Add date and country filters\n      const historyChartData = data.filter(({ country }) => country === 'usa');\n      setHistory(historyChartData);\n    };\n\n    _countryData();\n    _historyData();\n  }, []); // eslint-disable-line\n\n  const countryTableHeadCells = [\n    { id: 'country', label: 'Country' },\n    {\n      id: 'active',\n      label: 'Active Cases',\n    },\n    { id: 'deaths', label: 'Deaths' },\n    { id: 'recovered', label: 'Recovered' },\n    { id: 'cases', label: 'Total Confirmed' },\n  ];\n  const todayTableHeadCells = [\n    { id: 'country', label: 'Country' },\n    { id: 'todayDeaths', label: 'Deaths' },\n    { id: 'todayCases', label: 'Cases' },\n  ];\n\n  return (\n    <article className={classes.root}>\n      <Container>\n        <Grid container spacing={3}>\n          {/* Today table */}\n          <Grid item xs={12} md={5}>\n            <DashboardHeader>Confirmed Today</DashboardHeader>\n\n            <RootRef rootRef={todayTableRef}>\n              <DataTable\n                bodyRows={todayTableBodyRows}\n                headCells={todayTableHeadCells}\n                initialOrder=\"desc\"\n                initialOrderBy=\"todayCases\"\n              />\n            </RootRef>\n          </Grid>\n\n          {/* History chart */}\n          <Grid item xs={12} md={7}>\n            <DashboardHeader>USA Case History</DashboardHeader>\n\n            <Paper className={classes.historyChartContainer}>\n              <HistoryChart\n                height={\n                  todayTableRef.current\n                    ? todayTableRef.current.offsetHeight -\n                      historyChartContainerPadding * 2\n                    : 300\n                }\n                history={history}\n              />\n            </Paper>\n          </Grid>\n\n          {/* Country overview table */}\n          <Grid item xs={12}>\n            <DashboardHeader>Country Overview</DashboardHeader>\n\n            <DataTable\n              bodyRows={countryTableBodyRows}\n              headCells={countryTableHeadCells}\n              initialOrder=\"desc\"\n              initialOrderBy=\"active\"\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography className={classes.temp} component=\"h3\" variant=\"h6\">\n              More insights coming soon...\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </article>\n  );\n}\n\nfunction DashboardHeader({ children }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography className={classes.header} component=\"h2\" variant=\"h5\">\n        {children}\n      </Typography>\n      <Divider className={classes.divider} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}