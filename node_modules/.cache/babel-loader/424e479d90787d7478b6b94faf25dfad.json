{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.js\";\nimport React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nconst drawerWidth = 240; // 240px\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    transition: theme.transitions.create(['width', 'margin'], {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp\n    }),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['width', 'margin'], {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.sharp\n    }),\n    width: `calc(100% - ${drawerWidth}px)`\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden'\n  },\n  drawerPaper: {\n    position: 'relative',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    whiteSpace: 'nowrap',\n    width: drawerWidth\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  root: {\n    display: 'flex'\n  },\n  title: {\n    flexGrow: 1\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  }\n}));\nexport function PageTemplate({\n  children\n}) {\n  const classes = useStyles();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(true);\n\n  const _openDrawer = () => {\n    setIsDrawerOpen(true);\n  };\n\n  const _closeDrawer = () => {\n    setIsDrawerOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    className: clsx(classes.appBar, isDrawerOpen && classes.appBarShift),\n    position: \"absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"open drawer\",\n    className: clsx(classes.menuButton, isDrawerOpen && classes.menuButtonHidden),\n    color: \"inherit\",\n    edge: \"start\",\n    onClick: _openDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    component: \"h1\",\n    noWrap: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"COVID-19 Tracker\"))), /*#__PURE__*/React.createElement(Drawer, {\n    classes: {\n      paper: clsx(classes.drawerPaper, !isDrawerOpen && classes.drawerPaperClose)\n    },\n    open: isDrawerOpen,\n    variant: \"permanent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbarIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: _closeDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appBarSpacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), children));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.js"],"names":["React","useState","AppBar","CssBaseline","Drawer","IconButton","Toolbar","Typography","makeStyles","ChevronLeftIcon","MenuIcon","clsx","drawerWidth","useStyles","theme","appBar","transition","transitions","create","duration","leavingScreen","easing","sharp","zIndex","drawer","appBarShift","marginLeft","enteringScreen","width","appBarSpacer","mixins","toolbar","content","flexGrow","height","overflow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","menuButton","marginRight","menuButtonHidden","display","root","title","paddingRight","toolbarIcon","alignItems","justifyContent","padding","PageTemplate","children","classes","isDrawerOpen","setIsDrawerOpen","_openDrawer","_closeDrawer","paper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,WAAW,GAAG,GAApB,C,CAAyB;;AACzB,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,EAA8C;AACxDC,MAAAA,QAAQ,EAAEL,KAAK,CAACG,WAAN,CAAkBE,QAAlB,CAA2BC,aADmB;AAExDC,MAAAA,MAAM,EAAEP,KAAK,CAACG,WAAN,CAAkBI,MAAlB,CAAyBC;AAFuB,KAA9C,CADN;AAKNC,IAAAA,MAAM,EAAET,KAAK,CAACS,MAAN,CAAaC,MAAb,GAAsB;AALxB,GAD6B;AASrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAEd,WADD;AAEXI,IAAAA,UAAU,EAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,EAA8C;AACxDC,MAAAA,QAAQ,EAAEL,KAAK,CAACG,WAAN,CAAkBE,QAAlB,CAA2BQ,cADmB;AAExDN,MAAAA,MAAM,EAAEP,KAAK,CAACG,WAAN,CAAkBI,MAAlB,CAAyBC;AAFuB,KAA9C,CAFD;AAMXM,IAAAA,KAAK,EAAG,eAAchB,WAAY;AANvB,GATwB;AAkBrCiB,EAAAA,YAAY,EAAEf,KAAK,CAACgB,MAAN,CAAaC,OAlBU;AAoBrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,CADH;AAEPC,IAAAA,MAAM,EAAE,OAFD;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GApB4B;AA0BrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXrB,IAAAA,UAAU,EAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CG,MAAAA,MAAM,EAAEP,KAAK,CAACG,WAAN,CAAkBI,MAAlB,CAAyBC,KADW;AAE5CH,MAAAA,QAAQ,EAAEL,KAAK,CAACG,WAAN,CAAkBE,QAAlB,CAA2BQ;AAFO,KAAlC,CAFD;AAMXW,IAAAA,UAAU,EAAE,QAND;AAOXV,IAAAA,KAAK,EAAEhB;AAPI,GA1BwB;AAoCrC2B,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAE,QADK;AAEhBxB,IAAAA,UAAU,EAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,QAAQ,EAAEL,KAAK,CAACG,WAAN,CAAkBE,QAAlB,CAA2BC,aADO;AAE5CC,MAAAA,MAAM,EAAEP,KAAK,CAACG,WAAN,CAAkBI,MAAlB,CAAyBC;AAFW,KAAlC,CAFI;AAMhBM,IAAAA,KAAK,EAAEd,KAAK,CAAC2B,OAAN,CAAc,CAAd,CANS;AAQhB,KAAC3B,KAAK,CAAC4B,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5Bf,MAAAA,KAAK,EAAEd,KAAK,CAAC2B,OAAN,CAAc,CAAd;AADqB;AARd,GApCmB;AAiDrCG,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH,GAjDyB;AAqDrCC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,OAAO,EAAE;AADO,GArDmB;AAyDrCC,EAAAA,IAAI,EAAE;AACJD,IAAAA,OAAO,EAAE;AADL,GAzD+B;AA6DrCE,EAAAA,KAAK,EAAE;AACLhB,IAAAA,QAAQ,EAAE;AADL,GA7D8B;AAiErCF,EAAAA,OAAO,EAAE;AACPmB,IAAAA,YAAY,EAAE,EADP,CACW;;AADX,GAjE4B;AAqErCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE,QADD;AAEXL,IAAAA,OAAO,EAAE,MAFE;AAGXM,IAAAA,cAAc,EAAE,UAHL;AAIXC,IAAAA,OAAO,EAAE,OAJE;AAKX,OAAGxC,KAAK,CAACgB,MAAN,CAAaC;AALL;AArEwB,CAAL,CAAN,CAA5B;AA8EA,OAAO,SAASwB,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAMC,OAAO,GAAG5C,SAAS,EAAzB;AAEA,QAAM,CAAC6C,YAAD,EAAeC,eAAf,IAAkC1D,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAM2D,WAAW,GAAG,MAAM;AACxBD,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACzBF,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAErC,IAAI,CAAC8C,OAAO,CAAC1C,MAAT,EAAiB2C,YAAY,IAAID,OAAO,CAAChC,WAAzC,CADjB;AAEE,IAAA,QAAQ,EAAC,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEgC,OAAO,CAAC1B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,kBAAW,aADb;AAEE,IAAA,SAAS,EAAEpB,IAAI,CACb8C,OAAO,CAACb,UADK,EAEbc,YAAY,IAAID,OAAO,CAACX,gBAFX,CAFjB;AAME,IAAA,KAAK,EAAC,SANR;AAOE,IAAA,IAAI,EAAC,OAPP;AAQE,IAAA,OAAO,EAAEc,WARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,eAaE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEH,OAAO,CAACR,KADrB;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,SAAS,EAAC,IAHZ;AAIE,IAAA,MAAM,MAJR;AAKE,IAAA,OAAO,EAAC,IALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF,CAJF,CAHF,eAgCE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AACPa,MAAAA,KAAK,EAAEnD,IAAI,CACT8C,OAAO,CAACrB,WADC,EAET,CAACsB,YAAD,IAAiBD,OAAO,CAAClB,gBAFhB;AADJ,KADX;AAOE,IAAA,IAAI,EAAEmB,YAPR;AAQE,IAAA,OAAO,EAAC,WARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACN,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEU,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,CAhCF,eAiDE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACzB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEyB,OAAO,CAAC5B,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG2B,QAFH,CAjDF,CADF;AAwDD","sourcesContent":["import React, { useState } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport clsx from 'clsx';\n\nconst drawerWidth = 240; // 240px\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    transition: theme.transitions.create(['width', 'margin'], {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n    zIndex: theme.zIndex.drawer + 1,\n  },\n\n  appBarShift: {\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['width', 'margin'], {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n    width: `calc(100% - ${drawerWidth}px)`,\n  },\n\n  appBarSpacer: theme.mixins.toolbar,\n\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden',\n  },\n\n  drawerPaper: {\n    position: 'relative',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n  },\n\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n    width: theme.spacing(7),\n\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n\n  menuButton: {\n    marginRight: 36,\n  },\n\n  menuButtonHidden: {\n    display: 'none',\n  },\n\n  root: {\n    display: 'flex',\n  },\n\n  title: {\n    flexGrow: 1,\n  },\n\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n\n  toolbarIcon: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport function PageTemplate({ children }) {\n  const classes = useStyles();\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(true);\n\n  const _openDrawer = () => {\n    setIsDrawerOpen(true);\n  };\n\n  const _closeDrawer = () => {\n    setIsDrawerOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <AppBar\n        className={clsx(classes.appBar, isDrawerOpen && classes.appBarShift)}\n        position=\"absolute\"\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            aria-label=\"open drawer\"\n            className={clsx(\n              classes.menuButton,\n              isDrawerOpen && classes.menuButtonHidden,\n            )}\n            color=\"inherit\"\n            edge=\"start\"\n            onClick={_openDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            className={classes.title}\n            color=\"inherit\"\n            component=\"h1\"\n            noWrap\n            variant=\"h6\"\n          >\n            COVID-19 Tracker\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        classes={{\n          paper: clsx(\n            classes.drawerPaper,\n            !isDrawerOpen && classes.drawerPaperClose,\n          ),\n        }}\n        open={isDrawerOpen}\n        variant=\"permanent\"\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={_closeDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n      </Drawer>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {children}\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}