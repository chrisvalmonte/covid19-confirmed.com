{"ast":null,"code":"import { makeStyles } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport grey from '@material-ui/core/colors/grey';\nconst appBarHeight = '60px';\nconst drawerBgColor = grey[900];\nconst drawerWidth = '240px';\nconst linkColor = grey[100];\nconst logoHeight = '24px';\nexport const usePageTemplateStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: blueGrey[900],\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    minHeight: appBarHeight,\n    position: 'fixed',\n    top: 'auto',\n    zIndex: theme.zIndex.drawer + 1\n  },\n  appBarSpacer: {\n    [theme.breakpoints.down('sm')]: {\n      height: appBarHeight\n    }\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden'\n  },\n  drawer: {\n    backgroundColor: drawerBgColor,\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    [theme.breakpoints.up('md')]: {\n      flexShrink: 0,\n      width: drawerWidth\n    }\n  },\n  drawerLogo: {\n    height: logoHeight,\n    margin: '16px 0'\n  },\n  drawerPaper: {\n    backgroundColor: drawerBgColor,\n    position: 'relative',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    [theme.breakpoints.up('md')]: {\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    }\n  },\n  lastUpdated: {\n    color: grey[100],\n    fontSize: '12px',\n    marginTop: '24px',\n    paddingBottom: '16px',\n    paddingLeft: '16px'\n  },\n  link: {\n    color: linkColor,\n    display: 'block',\n    textDecoration: 'none'\n  },\n  linkActive: {\n    backgroundColor: blueGrey[900]\n  },\n  linkIcon: {\n    color: linkColor\n  },\n  links: {\n    marginBottom: 'auto'\n  },\n  menuButton: {\n    marginRight: '36px'\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // Keep right padding when drawer closed\n\n  },\n  toolbarLogo: {\n    height: logoHeight,\n    marginLeft: 'auto'\n  }\n}));","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.styles.js"],"names":["makeStyles","blueGrey","grey","appBarHeight","drawerBgColor","drawerWidth","linkColor","logoHeight","usePageTemplateStyles","theme","appBar","backgroundColor","bottom","display","justifyContent","minHeight","position","top","zIndex","drawer","appBarSpacer","breakpoints","down","height","content","flexGrow","overflow","flexDirection","up","flexShrink","width","drawerLogo","margin","drawerPaper","transition","transitions","create","easing","sharp","duration","enteringScreen","whiteSpace","lastUpdated","color","fontSize","marginTop","paddingBottom","paddingLeft","link","textDecoration","linkActive","linkIcon","links","marginBottom","menuButton","marginRight","menuButtonHidden","root","toolbar","paddingRight","toolbarLogo","marginLeft"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport grey from '@material-ui/core/colors/grey';\n\nconst appBarHeight = '60px';\nconst drawerBgColor = grey[900];\nconst drawerWidth = '240px';\nconst linkColor = grey[100];\nconst logoHeight = '24px';\n\nexport const usePageTemplateStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: blueGrey[900],\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    minHeight: appBarHeight,\n    position: 'fixed',\n    top: 'auto',\n    zIndex: theme.zIndex.drawer + 1,\n  },\n\n  appBarSpacer: {\n    [theme.breakpoints.down('sm')]: {\n      height: appBarHeight,\n    },\n  },\n\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden',\n  },\n\n  drawer: {\n    backgroundColor: drawerBgColor,\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n    },\n    [theme.breakpoints.up('md')]: {\n      flexShrink: 0,\n      width: drawerWidth,\n    },\n  },\n\n  drawerLogo: {\n    height: logoHeight,\n    margin: '16px 0',\n  },\n\n  drawerPaper: {\n    backgroundColor: drawerBgColor,\n    position: 'relative',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    [theme.breakpoints.up('md')]: {\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n    },\n  },\n\n  lastUpdated: {\n    color: grey[100],\n    fontSize: '12px',\n    marginTop: '24px',\n    paddingBottom: '16px',\n    paddingLeft: '16px',\n  },\n\n  link: {\n    color: linkColor,\n    display: 'block',\n    textDecoration: 'none',\n  },\n\n  linkActive: {\n    backgroundColor: blueGrey[900],\n  },\n\n  linkIcon: {\n    color: linkColor,\n  },\n\n  links: {\n    marginBottom: 'auto',\n  },\n\n  menuButton: {\n    marginRight: '36px',\n  },\n\n  menuButtonHidden: {\n    display: 'none',\n  },\n\n  root: {\n    display: 'flex',\n  },\n\n  toolbar: {\n    paddingRight: 24, // Keep right padding when drawer closed\n  },\n\n  toolbarLogo: {\n    height: logoHeight,\n    marginLeft: 'auto',\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}