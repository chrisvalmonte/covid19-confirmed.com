{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.js\";\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport logo from \"./logo.svg\";\nimport { paths } from './App';\nimport { CountCard } from './CountCard';\nimport { getTotals } from './services';\nimport { usePageTemplateStyles } from './PageTemplate.styles';\nexport function PageTemplate({\n  children\n}) {\n  const classes = usePageTemplateStyles();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const _toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  const [totals, setTotals] = useState({\n    active: 0,\n    cases: 0,\n    deaths: 0,\n    prevActive: 0,\n    prevCases: 0,\n    prevDeaths: 0,\n    prevRecovered: 0,\n    recovered: 0,\n    updated: null\n  }); // Get total counts when component mounts\n\n  useEffect(() => {\n    const _totalData = async () => {\n      const {\n        data: {\n          active,\n          cases,\n          deaths,\n          recovered,\n          updated\n        }\n      } = await getTotals();\n      setTotals({\n        active,\n        cases,\n        deaths,\n        prevActive: totals.active,\n        prevCases: totals.cases,\n        prevDeaths: totals.deaths,\n        prevRecovered: totals.recovered,\n        recovered,\n        updated\n      });\n    };\n\n    _totalData();\n  }, []); // eslint-disable-line\n\n  const renderedTotals = [{\n    count: totals.active,\n    countColor: red[500],\n    id: 'total--active',\n    prevCount: totals.prevActive,\n    title: 'Active Cases'\n  }, {\n    count: totals.deaths,\n    countColor: yellow[500],\n    id: 'total--deaths',\n    prevCount: totals.prevDeaths,\n    title: 'Deaths'\n  }, {\n    count: totals.recovered,\n    countColor: green[400],\n    id: 'total--recovered',\n    prevCount: totals.prevRecovered,\n    title: 'Recovered'\n  }, {\n    count: totals.cases,\n    countColor: grey[100],\n    id: 'total--cases',\n    prevCount: totals.prevCases,\n    title: 'Total Confirmed'\n  }];\n  const drawerContent = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    className: classes.links,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classes.link,\n    to: paths.map.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PublicIcon, {\n    style: {\n      color: grey[100]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: paths.map.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(NavLink, {\n    className: classes.link,\n    to: paths.news.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuBookIcon, {\n    style: {\n      color: grey[100]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: paths.news.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })))), renderedTotals.map(({\n    id,\n    ...data\n  }) => /*#__PURE__*/React.createElement(CountCard, Object.assign({\n    key: id\n  }, data, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.lastUpdated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, totals.updated ? `Last Update: ${moment(totals.updated).format('MM/DD/YYYY')} at\n                ${moment(totals.updated).format('h:mmA')}` : 'Finding statistics...'));\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: clsx(classes.appBar, isDrawerOpen && classes.appBarShift),\n    position: \"absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"open drawer\",\n    className: clsx(classes.menuButton, isDrawerOpen && classes.menuButtonHidden),\n    color: \"inherit\",\n    edge: \"start\",\n    onClick: _toggleDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"COVID-19\",\n    className: classes.toolbarLogo,\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"nav\", {\n    className: classes.drawer,\n    \"aria-label\": \"site navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Used for better performance on mobile\n\n    },\n    onClose: _toggleDrawer,\n    onOpen: _toggleDrawer,\n    open: isDrawerOpen,\n    variant: \"temporary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, drawerContent)), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    open: true,\n    variant: \"permanent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"COVID-19\",\n    className: classes.drawerLogo,\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }), drawerContent))), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appBarSpacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }), children));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.js"],"names":["React","useEffect","useState","NavLink","AppBar","CssBaseline","Drawer","Hidden","IconButton","List","ListItem","ListItemIcon","ListItemText","MenuBookIcon","MenuIcon","PublicIcon","SwipeableDrawer","Toolbar","Typography","green","grey","red","yellow","clsx","moment","paths","CountCard","getTotals","usePageTemplateStyles","PageTemplate","children","classes","isDrawerOpen","setIsDrawerOpen","_toggleDrawer","totals","setTotals","active","cases","deaths","prevActive","prevCases","prevDeaths","prevRecovered","recovered","updated","_totalData","data","renderedTotals","count","countColor","id","prevCount","title","drawerContent","links","link","map","path","color","name","news","lastUpdated","format","root","appBar","appBarShift","toolbar","menuButton","menuButtonHidden","toolbarLogo","logo","drawer","paper","drawerPaper","keepMounted","drawerLogo","content","appBarSpacer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport clsx from 'clsx';\nimport moment from 'moment';\n\nimport logo from './logo.svg';\nimport { paths } from './App';\nimport { CountCard } from './CountCard';\nimport { getTotals } from './services';\nimport { usePageTemplateStyles } from './PageTemplate.styles';\n\nexport function PageTemplate({ children }) {\n  const classes = usePageTemplateStyles();\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const _toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  const [totals, setTotals] = useState({\n    active: 0,\n    cases: 0,\n    deaths: 0,\n    prevActive: 0,\n    prevCases: 0,\n    prevDeaths: 0,\n    prevRecovered: 0,\n    recovered: 0,\n    updated: null,\n  });\n\n  // Get total counts when component mounts\n  useEffect(() => {\n    const _totalData = async () => {\n      const {\n        data: { active, cases, deaths, recovered, updated },\n      } = await getTotals();\n\n      setTotals({\n        active,\n        cases,\n        deaths,\n        prevActive: totals.active,\n        prevCases: totals.cases,\n        prevDeaths: totals.deaths,\n        prevRecovered: totals.recovered,\n        recovered,\n        updated,\n      });\n    };\n\n    _totalData();\n  }, []); // eslint-disable-line\n\n  const renderedTotals = [\n    {\n      count: totals.active,\n      countColor: red[500],\n      id: 'total--active',\n      prevCount: totals.prevActive,\n      title: 'Active Cases',\n    },\n    {\n      count: totals.deaths,\n      countColor: yellow[500],\n      id: 'total--deaths',\n      prevCount: totals.prevDeaths,\n      title: 'Deaths',\n    },\n    {\n      count: totals.recovered,\n      countColor: green[400],\n      id: 'total--recovered',\n      prevCount: totals.prevRecovered,\n      title: 'Recovered',\n    },\n    {\n      count: totals.cases,\n      countColor: grey[100],\n      id: 'total--cases',\n      prevCount: totals.prevCases,\n      title: 'Total Confirmed',\n    },\n  ];\n\n  const drawerContent = (\n    <>\n      <List className={classes.links}>\n        <NavLink className={classes.link} to={paths.map.path}>\n          <ListItem button>\n            <ListItemIcon>\n              <PublicIcon style={{ color: grey[100] }} />\n            </ListItemIcon>\n            <ListItemText primary={paths.map.name} />\n          </ListItem>\n        </NavLink>\n\n        <NavLink className={classes.link} to={paths.news.path}>\n          <ListItem button>\n            <ListItemIcon>\n              <MenuBookIcon style={{ color: grey[100] }} />\n            </ListItemIcon>\n            <ListItemText primary={paths.news.name} />\n          </ListItem>\n        </NavLink>\n      </List>\n\n      {renderedTotals.map(({ id, ...data }) => (\n        <CountCard key={id} {...data} />\n      ))}\n\n      <Typography className={classes.lastUpdated}>\n        {totals.updated\n          ? `Last Update: ${moment(totals.updated).format('MM/DD/YYYY')} at\n                ${moment(totals.updated).format('h:mmA')}`\n          : 'Finding statistics...'}\n      </Typography>\n    </>\n  );\n\n  return (\n    <article className={classes.root}>\n      <CssBaseline />\n\n      <Hidden mdUp>\n        <AppBar\n          className={clsx(classes.appBar, isDrawerOpen && classes.appBarShift)}\n          position=\"absolute\"\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              aria-label=\"open drawer\"\n              className={clsx(\n                classes.menuButton,\n                isDrawerOpen && classes.menuButtonHidden,\n              )}\n              color=\"inherit\"\n              edge=\"start\"\n              onClick={_toggleDrawer}\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <img alt=\"COVID-19\" className={classes.toolbarLogo} src={logo} />\n          </Toolbar>\n        </AppBar>\n      </Hidden>\n\n      <nav className={classes.drawer} aria-label=\"site navigation\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden mdUp implementation=\"css\">\n          <SwipeableDrawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Used for better performance on mobile\n            }}\n            onClose={_toggleDrawer}\n            onOpen={_toggleDrawer}\n            open={isDrawerOpen}\n            variant=\"temporary\"\n          >\n            {drawerContent}\n          </SwipeableDrawer>\n        </Hidden>\n\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            open\n            variant=\"permanent\"\n          >\n            <img alt=\"COVID-19\" className={classes.drawerLogo} src={logo} />\n            {drawerContent}\n          </Drawer>\n        </Hidden>\n      </nav>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {children}\n      </main>\n    </article>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}