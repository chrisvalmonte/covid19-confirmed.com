{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/DataTable.js\";\nimport React, { useState } from 'react';\nimport _ from 'lodash';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Cupcake', 305, 3.7, 67, 4.3), createData('Donut', 452, 25.0, 51, 4.9), createData('Eclair', 262, 16.0, 24, 6.0), createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Gingerbread', 356, 16.0, 49, 3.9), createData('Honeycomb', 408, 3.2, 87, 6.5), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Jelly Bean', 375, 0.0, 94, 0.0), createData('KitKat', 518, 26.0, 65, 7.0), createData('Lollipop', 392, 0.2, 98, 0.0), createData('Marshmallow', 318, 0, 81, 2.0), createData('Nougat', 360, 19.0, 9, 37.0), createData('Oreo', 437, 18.0, 63, 4.0)];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'Dessert (100g serving)'\n}, {\n  id: 'calories',\n  numeric: true,\n  disablePadding: false,\n  label: 'Calories'\n}, {\n  id: 'fat',\n  numeric: true,\n  disablePadding: false,\n  label: 'Fat (g)'\n}, {\n  id: 'carbs',\n  numeric: true,\n  disablePadding: false,\n  label: 'Carbs (g)'\n}, {\n  id: 'protein',\n  numeric: true,\n  disablePadding: false,\n  label: 'Protein (g)'\n}];\n\nfunction DataTableHead(props) {\n  const {\n    classes,\n    onRequestSort,\n    order,\n    orderBy\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, headCells.map(({\n    disablePadding,\n    id,\n    label,\n    numeric\n  }) => /*#__PURE__*/React.createElement(TableCell, {\n    key: id,\n    align: numeric ? 'right' : 'left',\n    padding: disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === id,\n    direction: orderBy === id ? order : 'asc',\n    onClick: createSortHandler(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, label, orderBy === id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginBottom: theme.spacing(2),\n    width: '100%'\n  },\n  root: {\n    width: '100%'\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport function DataTable() {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const _requestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const _changePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const _changeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"small\",\n    \"aria-label\": \"data table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DataTableHead, {\n    classes: classes,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: _requestSort,\n    rowCount: rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(({\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  }, index) => {\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      tabIndex: -1,\n      key: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 23\n      }\n    }, fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }\n    }, carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }, protein));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 33 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [25, 50, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: _changePage,\n    onChangeRowsPerPage: _changeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/DataTable.js"],"names":["React","useState","_","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Paper","createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","DataTableHead","props","classes","onRequestSort","createSortHandler","property","event","visuallyHidden","useStyles","theme","paper","marginBottom","spacing","width","root","table","minWidth","border","clip","height","margin","overflow","padding","position","top","DataTable","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","_requestSort","isAsc","_changePage","newPage","_changeRowsPerPage","parseInt","target","value","emptyRows","Math","min","length","slice","labelId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport _ from 'lodash';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Dessert (100g serving)',\n  },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction DataTableHead(props) {\n  const { classes, onRequestSort, order, orderBy } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(({ disablePadding, id, label, numeric }) => (\n          <TableCell\n            key={id}\n            align={numeric ? 'right' : 'left'}\n            padding={disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === id}\n              direction={orderBy === id ? order : 'asc'}\n              onClick={createSortHandler(id)}\n            >\n              {label}\n              {orderBy === id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginBottom: theme.spacing(2),\n    width: '100%',\n  },\n  root: {\n    width: '100%',\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport function DataTable() {\n  const classes = useStyles();\n\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const _requestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const _changePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const _changeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            aria-label=\"data table\"\n          >\n            <DataTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={_requestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(({ name, calories, fat, carbs, protein }, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow hover tabIndex={-1} key={name}>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {name}\n                      </TableCell>\n                      <TableCell align=\"right\">{calories}</TableCell>\n                      <TableCell align=\"right\">{fat}</TableCell>\n                      <TableCell align=\"right\">{carbs}</TableCell>\n                      <TableCell align=\"right\">{protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          rowsPerPageOptions={[25, 50, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={_changePage}\n          onChangeRowsPerPage={_changeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}