{"ast":null,"code":"import { makeStyles } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport grey from '@material-ui/core/colors/grey';\nconst appBarHeight = '60px';\nconst drawerBgColor = grey[900];\nconst drawerWidth = '240px';\nconst logoHeight = '24px';\nexport const usePageTemplateStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: blueGrey[900],\n    display: 'flex',\n    justifyContent: 'center',\n    minHeight: appBarHeight,\n    transition: theme.transitions.create(['width', 'margin'], {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp\n    }),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['width', 'margin'], {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.sharp\n    }),\n    width: `calc(100% - ${drawerWidth})`\n  },\n  appBarSpacer: {\n    [theme.breakpoints.down('sm')]: {\n      height: appBarHeight\n    }\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden'\n  },\n  drawer: {\n    backgroundColor: drawerBgColor,\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    [theme.breakpoints.up('md')]: {\n      flexShrink: 0,\n      width: drawerWidth\n    }\n  },\n  drawerLogo: {\n    height: logoHeight,\n    margin: '16px 0'\n  },\n  drawerPaper: {\n    backgroundColor: drawerBgColor,\n    position: 'relative',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    [theme.breakpoints.up('md')]: {\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    }\n  },\n  lastUpdated: {\n    color: grey[100],\n    fontSize: '12px',\n    marginTop: '24px',\n    paddingBottom: '16px',\n    paddingLeft: '16px'\n  },\n  link: {\n    color: grey[100],\n    textDecoration: 'none'\n  },\n  linkActive: {\n    backgroundColor: blueGrey[900]\n  },\n  links: {\n    marginBottom: 'auto'\n  },\n  menuButton: {\n    marginRight: '36px'\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // Keep right padding when drawer closed\n\n  },\n  toolbarLogo: {\n    height: logoHeight,\n    marginLeft: 'auto'\n  }\n}));","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.styles.js"],"names":["makeStyles","blueGrey","grey","appBarHeight","drawerBgColor","drawerWidth","logoHeight","usePageTemplateStyles","theme","appBar","backgroundColor","display","justifyContent","minHeight","transition","transitions","create","duration","leavingScreen","easing","sharp","zIndex","drawer","appBarShift","marginLeft","enteringScreen","width","appBarSpacer","breakpoints","down","height","content","flexGrow","overflow","flexDirection","up","flexShrink","drawerLogo","margin","drawerPaper","position","whiteSpace","lastUpdated","color","fontSize","marginTop","paddingBottom","paddingLeft","link","textDecoration","linkActive","links","marginBottom","menuButton","marginRight","menuButtonHidden","root","toolbar","paddingRight","toolbarLogo"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport grey from '@material-ui/core/colors/grey';\n\nconst appBarHeight = '60px';\nconst drawerBgColor = grey[900];\nconst drawerWidth = '240px';\nconst logoHeight = '24px';\n\nexport const usePageTemplateStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: blueGrey[900],\n    display: 'flex',\n    justifyContent: 'center',\n    minHeight: appBarHeight,\n    transition: theme.transitions.create(['width', 'margin'], {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n    zIndex: theme.zIndex.drawer + 1,\n  },\n\n  appBarShift: {\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['width', 'margin'], {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n    width: `calc(100% - ${drawerWidth})`,\n  },\n\n  appBarSpacer: {\n    [theme.breakpoints.down('sm')]: {\n      height: appBarHeight,\n    },\n  },\n\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden',\n  },\n\n  drawer: {\n    backgroundColor: drawerBgColor,\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n    },\n    [theme.breakpoints.up('md')]: {\n      flexShrink: 0,\n      width: drawerWidth,\n    },\n  },\n\n  drawerLogo: {\n    height: logoHeight,\n    margin: '16px 0',\n  },\n\n  drawerPaper: {\n    backgroundColor: drawerBgColor,\n    position: 'relative',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    [theme.breakpoints.up('md')]: {\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n    },\n  },\n\n  lastUpdated: {\n    color: grey[100],\n    fontSize: '12px',\n    marginTop: '24px',\n    paddingBottom: '16px',\n    paddingLeft: '16px',\n  },\n\n  link: {\n    color: grey[100],\n    textDecoration: 'none',\n  },\n\n  linkActive: {\n    backgroundColor: blueGrey[900],\n  },\n\n  links: {\n    marginBottom: 'auto',\n  },\n\n  menuButton: {\n    marginRight: '36px',\n  },\n\n  menuButtonHidden: {\n    display: 'none',\n  },\n\n  root: {\n    display: 'flex',\n  },\n\n  toolbar: {\n    paddingRight: 24, // Keep right padding when drawer closed\n  },\n\n  toolbarLogo: {\n    height: logoHeight,\n    marginLeft: 'auto',\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}