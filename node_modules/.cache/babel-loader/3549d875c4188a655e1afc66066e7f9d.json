{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/Map.js\";\nimport React, { useRef, useState } from 'react';\nimport MapGL, { Layer, Source } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { clusterCountLayer, clusterLayer, unclusteredPointLayer } from './Map.constants';\nexport function Map() {\n  const [viewport, setViewport] = useState({\n    latitude: 40.67,\n    longitude: -103.59,\n    zoom: 1,\n    bearing: 0,\n    pitch: 0\n  });\n  const settings = {\n    dragRotate: false\n  };\n  const sourceRef = useRef();\n\n  const _onViewportChange = updatedViewport => setViewport(updatedViewport);\n\n  const _onClick = event => {\n    if (!(event.hasOwnProperty('features') && event.features[0])) return;\n    const feature = event.features[0];\n    const clusterId = feature.properties.cluster_id;\n    const mapboxSource = sourceRef.current.getSource();\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n      if (err) return;\n\n      _onViewportChange({\n        latitude: feature.geometry.coordinates[1],\n        longitude: feature.geometry.coordinates[0],\n        transitionDuration: 500,\n        viewport,\n        zoom\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(MapGL, Object.assign({}, viewport, settings, {\n    height: \"100%\",\n    interactiveLayerIds: [clusterLayer.id],\n    mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_GL_API_TOKEN,\n    onClick: _onClick,\n    onViewportChange: _onViewportChange,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Source, {\n    cluster: true,\n    clusterMaxZoom: 14,\n    clusterRadius: 50,\n    data: \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\" // TODO: Replace w/ COVID-19 data\n    ,\n    ref: sourceRef,\n    type: \"geojson\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Layer, Object.assign({}, clusterLayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/Map.js"],"names":["React","useRef","useState","MapGL","Layer","Source","clusterCountLayer","clusterLayer","unclusteredPointLayer","Map","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","settings","dragRotate","sourceRef","_onViewportChange","updatedViewport","_onClick","event","hasOwnProperty","features","feature","clusterId","properties","cluster_id","mapboxSource","current","getSource","getClusterExpansionZoom","err","geometry","coordinates","transitionDuration","id","process","env","REACT_APP_MAPBOX_GL_API_TOKEN"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,IAAgBC,KAAhB,EAAuBC,MAAvB,QAAqC,cAArC;AACA,OAAO,8BAAP;AAEA,SACEC,iBADF,EAEEC,YAFF,EAGEC,qBAHF,QAIO,iBAJP;AAMA,OAAO,SAASC,GAAT,GAAe;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,QAAQ,EAAE,KAD6B;AAEvCC,IAAAA,SAAS,EAAE,CAAC,MAF2B;AAGvCC,IAAAA,IAAI,EAAE,CAHiC;AAIvCC,IAAAA,OAAO,EAAE,CAJ8B;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAQA,QAAMC,QAAQ,GAAG;AACfC,IAAAA,UAAU,EAAE;AADG,GAAjB;AAIA,QAAMC,SAAS,GAAGlB,MAAM,EAAxB;;AAEA,QAAMmB,iBAAiB,GAAGC,eAAe,IAAIV,WAAW,CAACU,eAAD,CAAxD;;AAEA,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAI,EAAEA,KAAK,CAACC,cAAN,CAAqB,UAArB,KAAoCD,KAAK,CAACE,QAAN,CAAe,CAAf,CAAtC,CAAJ,EAA8D;AAE9D,UAAMC,OAAO,GAAGH,KAAK,CAACE,QAAN,CAAe,CAAf,CAAhB;AACA,UAAME,SAAS,GAAGD,OAAO,CAACE,UAAR,CAAmBC,UAArC;AAEA,UAAMC,YAAY,GAAGX,SAAS,CAACY,OAAV,CAAkBC,SAAlB,EAArB;AAEAF,IAAAA,YAAY,CAACG,uBAAb,CAAqCN,SAArC,EAAgD,CAACO,GAAD,EAAMpB,IAAN,KAAe;AAC7D,UAAIoB,GAAJ,EAAS;;AAETd,MAAAA,iBAAiB,CAAC;AAChBR,QAAAA,QAAQ,EAAEc,OAAO,CAACS,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CADM;AAEhBvB,QAAAA,SAAS,EAAEa,OAAO,CAACS,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CAFK;AAGhBC,QAAAA,kBAAkB,EAAE,GAHJ;AAIhB3B,QAAAA,QAJgB;AAKhBI,QAAAA;AALgB,OAAD,CAAjB;AAOD,KAVD;AAWD,GAnBD;;AAqBA,sBACE,oBAAC,KAAD,oBACMJ,QADN,EAEMO,QAFN;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,mBAAmB,EAAE,CAACV,YAAY,CAAC+B,EAAd,CAJvB;AAKE,IAAA,QAAQ,EAAC,gCALX;AAME,IAAA,oBAAoB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BANpC;AAOE,IAAA,OAAO,EAAEnB,QAPX;AAQE,IAAA,gBAAgB,EAAEF,iBARpB;AASE,IAAA,KAAK,EAAC,MATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAWE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,cAAc,EAAE,EAFlB;AAGE,IAAA,aAAa,EAAE,EAHjB;AAIE,IAAA,IAAI,EAAC,iEAJP,CAIyE;AAJzE;AAKE,IAAA,GAAG,EAAED,SALP;AAME,IAAA,IAAI,EAAC,SANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,KAAD,oBAAWZ,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARF,CAXF,CADF;AA0BD","sourcesContent":["import React, { useRef, useState } from 'react';\nimport MapGL, { Layer, Source } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nimport {\n  clusterCountLayer,\n  clusterLayer,\n  unclusteredPointLayer,\n} from './Map.constants';\n\nexport function Map() {\n  const [viewport, setViewport] = useState({\n    latitude: 40.67,\n    longitude: -103.59,\n    zoom: 1,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const settings = {\n    dragRotate: false,\n  };\n\n  const sourceRef = useRef();\n\n  const _onViewportChange = updatedViewport => setViewport(updatedViewport);\n\n  const _onClick = event => {\n    if (!(event.hasOwnProperty('features') && event.features[0])) return;\n\n    const feature = event.features[0];\n    const clusterId = feature.properties.cluster_id;\n\n    const mapboxSource = sourceRef.current.getSource();\n\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n      if (err) return;\n\n      _onViewportChange({\n        latitude: feature.geometry.coordinates[1],\n        longitude: feature.geometry.coordinates[0],\n        transitionDuration: 500,\n        viewport,\n        zoom,\n      });\n    });\n  };\n\n  return (\n    <MapGL\n      {...viewport}\n      {...settings}\n      height=\"100%\"\n      interactiveLayerIds={[clusterLayer.id]}\n      mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_GL_API_TOKEN}\n      onClick={_onClick}\n      onViewportChange={_onViewportChange}\n      width=\"100%\"\n    >\n      <Source\n        cluster={true}\n        clusterMaxZoom={14}\n        clusterRadius={50}\n        data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\" // TODO: Replace w/ COVID-19 data\n        ref={sourceRef}\n        type=\"geojson\"\n      >\n        <Layer {...clusterLayer} />\n        {/* <Layer {...clusterCountLayer} />\n        <Layer {...unclusteredPointLayer} /> */}\n      </Source>\n    </MapGL>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}