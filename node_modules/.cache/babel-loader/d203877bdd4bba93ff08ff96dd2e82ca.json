{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/Map.js\";\nimport React, { useRef, useState } from 'react';\nimport MapGL, { Layer, Source } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { clusterCountLayer, clusterLayer, unclusteredPointLayer } from './Map.layers';\nexport function Map() {\n  const [viewport, setViewport] = useState({\n    latitude: 40.67,\n    longitude: -103.59,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0\n  });\n  const sourceRef = useRef();\n\n  const _onViewportChange = updatedViewport => setViewport(updatedViewport);\n\n  const _onClick = event => {\n    if (!event.hasOwnProperty('features')) return;\n    const feature = event.features[0];\n    const clusterId = feature.properties.cluster_id;\n    const mapboxSource = sourceRef.current.getSource();\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n      if (err) return;\n\n      _onViewportChange({\n        latitude: feature.geometry.coordinates[1],\n        longitude: feature.geometry.coordinates[0],\n        transitionDuration: 500,\n        viewport,\n        zoom\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(MapGL, Object.assign({}, viewport, {\n    height: \"100%\",\n    interactiveLayerIds: [clusterLayer.id],\n    mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_GL_API_TOKEN,\n    onClick: _onClick,\n    onViewportChange: _onViewportChange,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Source, {\n    cluster: true,\n    clusterMaxZoom: 14,\n    clusterRadius: 50,\n    data: \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\" // TODO: Replace w/ COVID-19 data\n    ,\n    ref: sourceRef,\n    type: \"geojson\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Layer, Object.assign({}, clusterLayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Layer, Object.assign({}, clusterCountLayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Layer, Object.assign({}, unclusteredPointLayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/Map.js"],"names":["React","useRef","useState","MapGL","Layer","Source","clusterCountLayer","clusterLayer","unclusteredPointLayer","Map","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","sourceRef","_onViewportChange","updatedViewport","_onClick","event","hasOwnProperty","feature","features","clusterId","properties","cluster_id","mapboxSource","current","getSource","getClusterExpansionZoom","err","geometry","coordinates","transitionDuration","id","process","env","REACT_APP_MAPBOX_GL_API_TOKEN"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,IAAgBC,KAAhB,EAAuBC,MAAvB,QAAqC,cAArC;AACA,OAAO,8BAAP;AAEA,SACEC,iBADF,EAEEC,YAFF,EAGEC,qBAHF,QAIO,cAJP;AAMA,OAAO,SAASC,GAAT,GAAe;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,QAAQ,EAAE,KAD6B;AAEvCC,IAAAA,SAAS,EAAE,CAAC,MAF2B;AAGvCC,IAAAA,IAAI,EAAE,CAHiC;AAIvCC,IAAAA,OAAO,EAAE,CAJ8B;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAQA,QAAMC,SAAS,GAAGhB,MAAM,EAAxB;;AAEA,QAAMiB,iBAAiB,GAAGC,eAAe,IAAIR,WAAW,CAACQ,eAAD,CAAxD;;AAEA,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAI,CAACA,KAAK,CAACC,cAAN,CAAqB,UAArB,CAAL,EAAuC;AAEvC,UAAMC,OAAO,GAAGF,KAAK,CAACG,QAAN,CAAe,CAAf,CAAhB;AACA,UAAMC,SAAS,GAAGF,OAAO,CAACG,UAAR,CAAmBC,UAArC;AAEA,UAAMC,YAAY,GAAGX,SAAS,CAACY,OAAV,CAAkBC,SAAlB,EAArB;AAEAF,IAAAA,YAAY,CAACG,uBAAb,CAAqCN,SAArC,EAAgD,CAACO,GAAD,EAAMlB,IAAN,KAAe;AAC7D,UAAIkB,GAAJ,EAAS;;AAETd,MAAAA,iBAAiB,CAAC;AAChBN,QAAAA,QAAQ,EAAEW,OAAO,CAACU,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CADM;AAEhBrB,QAAAA,SAAS,EAAEU,OAAO,CAACU,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CAFK;AAGhBC,QAAAA,kBAAkB,EAAE,GAHJ;AAIhBzB,QAAAA,QAJgB;AAKhBI,QAAAA;AALgB,OAAD,CAAjB;AAOD,KAVD;AAWD,GAnBD;;AAqBA,sBACE,oBAAC,KAAD,oBACMJ,QADN;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,mBAAmB,EAAE,CAACH,YAAY,CAAC6B,EAAd,CAHvB;AAIE,IAAA,QAAQ,EAAC,gCAJX;AAKE,IAAA,oBAAoB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BALpC;AAME,IAAA,OAAO,EAAEnB,QANX;AAOE,IAAA,gBAAgB,EAAEF,iBAPpB;AAQE,IAAA,KAAK,EAAC,MARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAUE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,cAAc,EAAE,EAFlB;AAGE,IAAA,aAAa,EAAE,EAHjB;AAIE,IAAA,IAAI,EAAC,iEAJP,CAIyE;AAJzE;AAKE,IAAA,GAAG,EAAED,SALP;AAME,IAAA,IAAI,EAAC,SANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,KAAD,oBAAWV,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARF,eASE,oBAAC,KAAD,oBAAWD,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATF,eAUE,oBAAC,KAAD,oBAAWE,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVF,CAVF,CADF;AAyBD","sourcesContent":["import React, { useRef, useState } from 'react';\nimport MapGL, { Layer, Source } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nimport {\n  clusterCountLayer,\n  clusterLayer,\n  unclusteredPointLayer,\n} from './Map.layers';\n\nexport function Map() {\n  const [viewport, setViewport] = useState({\n    latitude: 40.67,\n    longitude: -103.59,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const sourceRef = useRef();\n\n  const _onViewportChange = updatedViewport => setViewport(updatedViewport);\n\n  const _onClick = event => {\n    if (!event.hasOwnProperty('features')) return;\n\n    const feature = event.features[0];\n    const clusterId = feature.properties.cluster_id;\n\n    const mapboxSource = sourceRef.current.getSource();\n\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n      if (err) return;\n\n      _onViewportChange({\n        latitude: feature.geometry.coordinates[1],\n        longitude: feature.geometry.coordinates[0],\n        transitionDuration: 500,\n        viewport,\n        zoom,\n      });\n    });\n  };\n\n  return (\n    <MapGL\n      {...viewport}\n      height=\"100%\"\n      interactiveLayerIds={[clusterLayer.id]}\n      mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_GL_API_TOKEN}\n      onClick={_onClick}\n      onViewportChange={_onViewportChange}\n      width=\"100%\"\n    >\n      <Source\n        cluster={true}\n        clusterMaxZoom={14}\n        clusterRadius={50}\n        data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\" // TODO: Replace w/ COVID-19 data\n        ref={sourceRef}\n        type=\"geojson\"\n      >\n        <Layer {...clusterLayer} />\n        <Layer {...clusterCountLayer} />\n        <Layer {...unclusteredPointLayer} />\n      </Source>\n    </MapGL>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}