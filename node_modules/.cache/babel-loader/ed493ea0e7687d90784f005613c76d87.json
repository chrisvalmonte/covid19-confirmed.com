{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.js\";\nimport React, { useEffect, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport logo from \"./logo.svg\";\nimport { CountCard } from './CountCard';\nimport { getTotals } from './services';\nimport { usePageTemplateStyles } from './PageTemplate.styles';\nexport function PageTemplate({\n  children\n}) {\n  const classes = usePageTemplateStyles();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const _toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  const [totals, setTotals] = useState({\n    active: 0,\n    cases: 0,\n    deaths: 0,\n    prevActive: 0,\n    prevCases: 0,\n    prevDeaths: 0,\n    prevRecovered: 0,\n    recovered: 0,\n    updated: null\n  }); // Get total counts when component mounts\n\n  useEffect(() => {\n    const _totalData = async () => {\n      const {\n        data: {\n          active,\n          cases,\n          deaths,\n          recovered,\n          updated\n        }\n      } = await getTotals();\n      setTotals({\n        active,\n        cases,\n        deaths,\n        prevActive: totals.active,\n        prevCases: totals.cases,\n        prevDeaths: totals.deaths,\n        prevRecovered: totals.recovered,\n        recovered,\n        updated\n      });\n    };\n\n    _totalData();\n  }, []); // eslint-disable-line\n\n  const renderedTotals = [{\n    count: totals.active,\n    countColor: red[500],\n    id: 'total--active',\n    prevCount: totals.prevActive,\n    title: 'Active Cases'\n  }, {\n    count: totals.deaths,\n    countColor: yellow[500],\n    id: 'total--deaths',\n    prevCount: totals.prevDeaths,\n    title: 'Deaths'\n  }, {\n    count: totals.recovered,\n    countColor: green[400],\n    id: 'total--recovered',\n    prevCount: totals.prevRecovered,\n    title: 'Recovered'\n  }, {\n    count: totals.cases,\n    countColor: grey[100],\n    id: 'total--cases',\n    prevCount: totals.prevCases,\n    title: 'Total Confirmed'\n  }];\n  const drawerContent = /*#__PURE__*/React.createElement(React.Fragment, null, renderedTotals.map(({\n    id,\n    ...data\n  }) => /*#__PURE__*/React.createElement(CountCard, Object.assign({\n    key: id\n  }, data, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }))), totals.updated && /*#__PURE__*/React.createElement(Typography, {\n    className: classes.lastUpdated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, `Last Update: ${moment(totals.updated).format('MM/DD/YYYY')} at\n                ${moment(totals.updated).format('HH:mmA')}`));\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    className: clsx(classes.appBar, isDrawerOpen && classes.appBarShift),\n    position: \"absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"open drawer\",\n    className: clsx(classes.menuButton, isDrawerOpen && classes.menuButtonHidden),\n    color: \"inherit\",\n    edge: \"start\",\n    onClick: _toggleDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"COVID-19\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"nav\", {\n    className: classes.drawer,\n    \"aria-label\": \"site navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Used for better performance on mobile\n\n    },\n    onClose: _toggleDrawer,\n    onOpen: _toggleDrawer,\n    open: isDrawerOpen,\n    variant: \"temporary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, drawerContent)), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    open: true,\n    variant: \"permanent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, drawerContent))), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appBarSpacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }), children));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/PageTemplate.js"],"names":["React","useEffect","useState","AppBar","CssBaseline","Drawer","Hidden","IconButton","MenuIcon","SwipeableDrawer","Toolbar","Typography","green","grey","red","yellow","clsx","moment","CountCard","getTotals","usePageTemplateStyles","PageTemplate","children","classes","isDrawerOpen","setIsDrawerOpen","_toggleDrawer","totals","setTotals","active","cases","deaths","prevActive","prevCases","prevDeaths","prevRecovered","recovered","updated","_totalData","data","renderedTotals","count","countColor","id","prevCount","title","drawerContent","map","lastUpdated","format","root","appBar","appBarShift","toolbar","menuButton","menuButtonHidden","logo","drawer","paper","drawerPaper","keepMounted","content","appBarSpacer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAGA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AAEA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAMC,OAAO,GAAGH,qBAAqB,EAArC;AAEA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMwB,aAAa,GAAG,MAAM;AAC1BD,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAIA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC;AACnC2B,IAAAA,MAAM,EAAE,CAD2B;AAEnCC,IAAAA,KAAK,EAAE,CAF4B;AAGnCC,IAAAA,MAAM,EAAE,CAH2B;AAInCC,IAAAA,UAAU,EAAE,CAJuB;AAKnCC,IAAAA,SAAS,EAAE,CALwB;AAMnCC,IAAAA,UAAU,EAAE,CANuB;AAOnCC,IAAAA,aAAa,EAAE,CAPoB;AAQnCC,IAAAA,SAAS,EAAE,CARwB;AASnCC,IAAAA,OAAO,EAAE;AAT0B,GAAD,CAApC,CARyC,CAoBzC;;AACApC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqC,UAAU,GAAG,YAAY;AAC7B,YAAM;AACJC,QAAAA,IAAI,EAAE;AAAEV,UAAAA,MAAF;AAAUC,UAAAA,KAAV;AAAiBC,UAAAA,MAAjB;AAAyBK,UAAAA,SAAzB;AAAoCC,UAAAA;AAApC;AADF,UAEF,MAAMlB,SAAS,EAFnB;AAIAS,MAAAA,SAAS,CAAC;AACRC,QAAAA,MADQ;AAERC,QAAAA,KAFQ;AAGRC,QAAAA,MAHQ;AAIRC,QAAAA,UAAU,EAAEL,MAAM,CAACE,MAJX;AAKRI,QAAAA,SAAS,EAAEN,MAAM,CAACG,KALV;AAMRI,QAAAA,UAAU,EAAEP,MAAM,CAACI,MANX;AAORI,QAAAA,aAAa,EAAER,MAAM,CAACS,SAPd;AAQRA,QAAAA,SARQ;AASRC,QAAAA;AATQ,OAAD,CAAT;AAWD,KAhBD;;AAkBAC,IAAAA,UAAU;AACX,GApBQ,EAoBN,EApBM,CAAT,CArByC,CAyCjC;;AAER,QAAME,cAAc,GAAG,CACrB;AACEC,IAAAA,KAAK,EAAEd,MAAM,CAACE,MADhB;AAEEa,IAAAA,UAAU,EAAE5B,GAAG,CAAC,GAAD,CAFjB;AAGE6B,IAAAA,EAAE,EAAE,eAHN;AAIEC,IAAAA,SAAS,EAAEjB,MAAM,CAACK,UAJpB;AAKEa,IAAAA,KAAK,EAAE;AALT,GADqB,EAQrB;AACEJ,IAAAA,KAAK,EAAEd,MAAM,CAACI,MADhB;AAEEW,IAAAA,UAAU,EAAE3B,MAAM,CAAC,GAAD,CAFpB;AAGE4B,IAAAA,EAAE,EAAE,eAHN;AAIEC,IAAAA,SAAS,EAAEjB,MAAM,CAACO,UAJpB;AAKEW,IAAAA,KAAK,EAAE;AALT,GARqB,EAerB;AACEJ,IAAAA,KAAK,EAAEd,MAAM,CAACS,SADhB;AAEEM,IAAAA,UAAU,EAAE9B,KAAK,CAAC,GAAD,CAFnB;AAGE+B,IAAAA,EAAE,EAAE,kBAHN;AAIEC,IAAAA,SAAS,EAAEjB,MAAM,CAACQ,aAJpB;AAKEU,IAAAA,KAAK,EAAE;AALT,GAfqB,EAsBrB;AACEJ,IAAAA,KAAK,EAAEd,MAAM,CAACG,KADhB;AAEEY,IAAAA,UAAU,EAAE7B,IAAI,CAAC,GAAD,CAFlB;AAGE8B,IAAAA,EAAE,EAAE,cAHN;AAIEC,IAAAA,SAAS,EAAEjB,MAAM,CAACM,SAJpB;AAKEY,IAAAA,KAAK,EAAE;AALT,GAtBqB,CAAvB;AA+BA,QAAMC,aAAa,gBACjB,0CACGN,cAAc,CAACO,GAAf,CAAmB,CAAC;AAAEJ,IAAAA,EAAF;AAAM,OAAGJ;AAAT,GAAD,kBAClB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEI;AAAhB,KAAwBJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,EAKGZ,MAAM,CAACU,OAAP,iBACC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEd,OAAO,CAACyB,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,gBAAe/B,MAAM,CAACU,MAAM,CAACU,OAAR,CAAN,CAAuBY,MAAvB,CAA8B,YAA9B,CAA4C;kBACrDhC,MAAM,CAACU,MAAM,CAACU,OAAR,CAAN,CAAuBY,MAAvB,CAA8B,QAA9B,CAAwC,EAFlD,CANJ,CADF;AAeA,sBACE;AAAS,IAAA,SAAS,EAAE1B,OAAO,CAAC2B,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAElC,IAAI,CAACO,OAAO,CAAC4B,MAAT,EAAiB3B,YAAY,IAAID,OAAO,CAAC6B,WAAzC,CADjB;AAEE,IAAA,QAAQ,EAAC,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,kBAAW,aADb;AAEE,IAAA,SAAS,EAAErC,IAAI,CACbO,OAAO,CAAC+B,UADK,EAEb9B,YAAY,IAAID,OAAO,CAACgC,gBAFX,CAFjB;AAME,IAAA,KAAK,EAAC,SANR;AAOE,IAAA,IAAI,EAAC,OAPP;AAQE,IAAA,OAAO,EAAE7B,aARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF,eA0BE;AAAK,IAAA,GAAG,EAAE8B,IAAV;AAAgB,IAAA,GAAG,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CAJF,CAHF,eAqCE;AAAK,IAAA,SAAS,EAAEjC,OAAO,CAACkC,MAAxB;AAAgC,kBAAW,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAa,IAAA,cAAc,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AACE,IAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEnC,OAAO,CAACoC;AADR,KADX;AAIE,IAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,IADH,CACS;;AADT,KAJd;AAOE,IAAA,OAAO,EAAElC,aAPX;AAQE,IAAA,MAAM,EAAEA,aARV;AASE,IAAA,IAAI,EAAEF,YATR;AAUE,IAAA,OAAO,EAAC,WAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGsB,aAZH,CADF,CAFF,eAmBE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,cAAc,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AACPY,MAAAA,KAAK,EAAEnC,OAAO,CAACoC;AADR,KADX;AAIE,IAAA,IAAI,MAJN;AAKE,IAAA,OAAO,EAAC,WALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGb,aAPH,CADF,CAnBF,CArCF,eAqEE;AAAM,IAAA,SAAS,EAAEvB,OAAO,CAACsC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEtC,OAAO,CAACuC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGxC,QAFH,CArEF,CADF;AA4ED","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport clsx from 'clsx';\nimport moment from 'moment';\n\nimport logo from './logo.svg';\nimport { CountCard } from './CountCard';\nimport { getTotals } from './services';\nimport { usePageTemplateStyles } from './PageTemplate.styles';\n\nexport function PageTemplate({ children }) {\n  const classes = usePageTemplateStyles();\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const _toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  const [totals, setTotals] = useState({\n    active: 0,\n    cases: 0,\n    deaths: 0,\n    prevActive: 0,\n    prevCases: 0,\n    prevDeaths: 0,\n    prevRecovered: 0,\n    recovered: 0,\n    updated: null,\n  });\n\n  // Get total counts when component mounts\n  useEffect(() => {\n    const _totalData = async () => {\n      const {\n        data: { active, cases, deaths, recovered, updated },\n      } = await getTotals();\n\n      setTotals({\n        active,\n        cases,\n        deaths,\n        prevActive: totals.active,\n        prevCases: totals.cases,\n        prevDeaths: totals.deaths,\n        prevRecovered: totals.recovered,\n        recovered,\n        updated,\n      });\n    };\n\n    _totalData();\n  }, []); // eslint-disable-line\n\n  const renderedTotals = [\n    {\n      count: totals.active,\n      countColor: red[500],\n      id: 'total--active',\n      prevCount: totals.prevActive,\n      title: 'Active Cases',\n    },\n    {\n      count: totals.deaths,\n      countColor: yellow[500],\n      id: 'total--deaths',\n      prevCount: totals.prevDeaths,\n      title: 'Deaths',\n    },\n    {\n      count: totals.recovered,\n      countColor: green[400],\n      id: 'total--recovered',\n      prevCount: totals.prevRecovered,\n      title: 'Recovered',\n    },\n    {\n      count: totals.cases,\n      countColor: grey[100],\n      id: 'total--cases',\n      prevCount: totals.prevCases,\n      title: 'Total Confirmed',\n    },\n  ];\n\n  const drawerContent = (\n    <>\n      {renderedTotals.map(({ id, ...data }) => (\n        <CountCard key={id} {...data} />\n      ))}\n\n      {totals.updated && (\n        <Typography className={classes.lastUpdated}>\n          {`Last Update: ${moment(totals.updated).format('MM/DD/YYYY')} at\n                ${moment(totals.updated).format('HH:mmA')}`}\n        </Typography>\n      )}\n    </>\n  );\n\n  return (\n    <article className={classes.root}>\n      <CssBaseline />\n\n      <AppBar\n        className={clsx(classes.appBar, isDrawerOpen && classes.appBarShift)}\n        position=\"absolute\"\n      >\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdUp>\n            <IconButton\n              aria-label=\"open drawer\"\n              className={clsx(\n                classes.menuButton,\n                isDrawerOpen && classes.menuButtonHidden,\n              )}\n              color=\"inherit\"\n              edge=\"start\"\n              onClick={_toggleDrawer}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n\n          {/* <Typography\n            className={classes.title}\n            color=\"inherit\"\n            component=\"h1\"\n            noWrap\n            variant=\"h6\"\n          >\n            COVID-19 Confirmed\n          </Typography> */}\n\n          <img src={logo} alt=\"COVID-19\" />\n        </Toolbar>\n      </AppBar>\n\n      <nav className={classes.drawer} aria-label=\"site navigation\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden mdUp implementation=\"css\">\n          <SwipeableDrawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Used for better performance on mobile\n            }}\n            onClose={_toggleDrawer}\n            onOpen={_toggleDrawer}\n            open={isDrawerOpen}\n            variant=\"temporary\"\n          >\n            {drawerContent}\n          </SwipeableDrawer>\n        </Hidden>\n\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            open\n            variant=\"permanent\"\n          >\n            {drawerContent}\n          </Drawer>\n        </Hidden>\n      </nav>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {children}\n      </main>\n    </article>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}