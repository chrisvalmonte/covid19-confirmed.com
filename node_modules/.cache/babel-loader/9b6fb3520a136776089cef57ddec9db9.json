{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/covid19-confirmed/app/src/Dashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { HorizontalGridLines, LineMarkSeries, VerticalGridLines, XAxis, XYPlot, YAxis } from 'react-vis';\nimport { DataTable } from './DataTable';\nimport { getCountries, getHistory } from './services';\nimport { rootStyles } from './App';\nconst useStyles = makeStyles(() => ({\n  root: { ...rootStyles,\n    backgroundColor: grey[100]\n  }\n}));\nexport function Dashboard() {\n  const classes = useStyles();\n  const [countries, setCountries] = useState([]);\n  const [history, setHistory] = useState([]); // Get country and history data when component mounts\n\n  useEffect(() => {\n    const _countryData = async () => {\n      const {\n        data\n      } = await getCountries();\n      setCountries(data);\n    };\n\n    const _historyData = async () => {\n      const {\n        data\n      } = await getHistory();\n      setHistory(data);\n    };\n\n    _countryData();\n\n    _historyData();\n  }, []); // eslint-disable-line\n\n  const headCells = [{\n    id: 'name',\n    label: 'Dessert (100g serving)'\n  }, {\n    id: 'calories',\n    label: 'Calories'\n  }, {\n    id: 'fat',\n    label: 'Fat (g)'\n  }, {\n    id: 'carbs',\n    label: 'Carbs (g)'\n  }, {\n    id: 'protein',\n    label: 'Protein (g)'\n  }];\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })))));\n}\n\nfunction LineChart(props) {\n  return /*#__PURE__*/React.createElement(XYPlot, {\n    width: 300,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VerticalGridLines, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(HorizontalGridLines, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineMarkSeries, {\n    className: \"linemark-series-example\",\n    style: {\n      strokeWidth: '3px'\n    },\n    lineStyle: {\n      stroke: 'red'\n    },\n    markStyle: {\n      stroke: 'blue'\n    },\n    data: [{\n      x: 1,\n      y: 10\n    }, {\n      x: 2,\n      y: 5\n    }, {\n      x: 3,\n      y: 15\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineMarkSeries, {\n    className: \"linemark-series-example-2\",\n    curve: 'curveMonotoneX',\n    data: [{\n      x: 1,\n      y: 11\n    }, {\n      x: 1.5,\n      y: 29\n    }, {\n      x: 3,\n      y: 7\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/covid19-confirmed/app/src/Dashboard.js"],"names":["React","useEffect","useState","Container","Grid","grey","makeStyles","HorizontalGridLines","LineMarkSeries","VerticalGridLines","XAxis","XYPlot","YAxis","DataTable","getCountries","getHistory","rootStyles","useStyles","root","backgroundColor","Dashboard","classes","countries","setCountries","history","setHistory","_countryData","data","_historyData","headCells","id","label","LineChart","props","strokeWidth","stroke","x","y"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  HorizontalGridLines,\n  LineMarkSeries,\n  VerticalGridLines,\n  XAxis,\n  XYPlot,\n  YAxis,\n} from 'react-vis';\n\nimport { DataTable } from './DataTable';\nimport { getCountries, getHistory } from './services';\nimport { rootStyles } from './App';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    ...rootStyles,\n    backgroundColor: grey[100],\n  },\n}));\n\nexport function Dashboard() {\n  const classes = useStyles();\n\n  const [countries, setCountries] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  // Get country and history data when component mounts\n  useEffect(() => {\n    const _countryData = async () => {\n      const { data } = await getCountries();\n      setCountries(data);\n    };\n\n    const _historyData = async () => {\n      const { data } = await getHistory();\n      setHistory(data);\n    };\n\n    _countryData();\n    _historyData();\n  }, []); // eslint-disable-line\n\n  const headCells = [\n    {\n      id: 'name',\n      label: 'Dessert (100g serving)',\n    },\n    { id: 'calories', label: 'Calories' },\n    { id: 'fat', label: 'Fat (g)' },\n    { id: 'carbs', label: 'Carbs (g)' },\n    { id: 'protein', label: 'Protein (g)' },\n  ];\n\n  return (\n    <article className={classes.root}>\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <DataTable />\n          </Grid>\n        </Grid>\n      </Container>\n    </article>\n  );\n}\n\nfunction LineChart(props) {\n  return (\n    <XYPlot width={300} height={300}>\n      <VerticalGridLines />\n      <HorizontalGridLines />\n      <XAxis />\n      <YAxis />\n      <LineMarkSeries\n        className=\"linemark-series-example\"\n        style={{\n          strokeWidth: '3px',\n        }}\n        lineStyle={{ stroke: 'red' }}\n        markStyle={{ stroke: 'blue' }}\n        data={[\n          { x: 1, y: 10 },\n          { x: 2, y: 5 },\n          { x: 3, y: 15 },\n        ]}\n      />\n      <LineMarkSeries\n        className=\"linemark-series-example-2\"\n        curve={'curveMonotoneX'}\n        data={[\n          { x: 1, y: 11 },\n          { x: 1.5, y: 29 },\n          { x: 3, y: 7 },\n        ]}\n      />\n    </XYPlot>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}