{"version":3,"sources":["logo.svg","img-not-available.png","biohazard.svg","DataTable.js","HistoryChart.js","services.js","Dashboard.js","Map.js","NewsCard.js","News.js","NotFound.js","CountCard.js","PageTemplate.styles.js","PageTemplate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","paper","marginBottom","spacing","width","root","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","DataTable","bodyRows","headCells","initialOrder","initialOrderBy","classes","useState","order","setOrder","orderBy","setOrderBy","page","setPage","pageSizes","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","className","Paper","TableContainer","Table","aria-label","aria-labelledby","size","DataTableHead","cells","onRequestSort","event","property","TableBody","_","slice","map","id","bodyRow","TableRow","hover","key","tabIndex","Object","keys","bodyCell","index","cellProps","component","scope","align","TableCell","style","colSpan","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","rowsPerPageOptions","TableHead","label","sortDirection","TableSortLabel","active","direction","onClick","crosshair","backgroundColor","grey","color","minWidth","HistoryChart","history","crosshairValue","setCrosshairValue","_formatDate","date","moment","format","onMouseLeave","includeMargin","text","xPercent","yPercent","tickFormat","tickTotal","transform","textAnchor","y","numeral","cases","timeline","data","x","valueOf","curve","onNearestX","d","stroke","red","line","values","Typography","variant","getCountries","a","axios","get","getGEOData","getTotals","getHistory","getNews","params","apiKey","process","from","pageSize","q","sortBy","divider","header","historyChartContainer","rootStyles","temp","marginTop","textAlign","Dashboard","countryTableBodyRows","setCountryTableBodyRows","todayTableBodyRows","setTodayTableBodyRows","todayTableRef","useRef","setHistory","useEffect","_countryData","countryTableData","country","deaths","recovered","todayTableData","todayCases","todayDeaths","_historyData","historyChartData","filter","Container","Grid","container","item","xs","md","DashboardHeader","RootRef","rootRef","current","offsetHeight","historyChartContainerPadding","children","Divider","Map","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","clusterData","setClusterData","sourceRef","features","city","coordinates","province","stats","confirmed","geometry","type","properties","state","_geoData","_onViewportChange","updatedViewport","clusterLayer","paint","source","dragRotate","interactiveLayerIds","mapStyle","mapboxApiAccessToken","hasOwnProperty","feature","clusterId","cluster_id","getSource","getClusterExpansionZoom","err","transitionDuration","onViewportChange","ref","action","display","media","NewsCard","description","title","url","urlToImage","Card","CardMedia","image","imgNotAvailable","CardContent","gutterBottom","CardActionArea","Link","href","Button","fab","bottom","right","breakpoints","down","newsAPICredit","News","pageRef","currentPage","setCurrentPage","isFabShown","setIsFabShown","newsArticles","setNewsArticles","articles","_newsData","_getNextPage","uniqBy","onEnter","onLeave","article","sm","lg","Zoom","in","Fab","scrollTo","offsetTop","img","notFoundContainer","alignItems","flexDirection","notFoundText","fontWeight","justifyContent","flexGrow","overflowY","paddingBottom","paddingTop","NotFound","alt","src","biohazard","content","paddingLeft","paddingRight","pos","boxShadow","fontSize","CountCard","countColor","prevCount","end","formattingFn","number","start","useEasing","drawerBgColor","linkColor","usePageTemplateStyles","appBar","blueGrey","minHeight","zIndex","drawer","up","flexShrink","drawerLogo","drawerPaper","transition","transitions","create","easing","sharp","duration","enteringScreen","whiteSpace","lastUpdated","link","textDecoration","linkActive","linkIcon","links","menuButton","marginRight","menuButtonHidden","toolbar","toolbarLogo","marginLeft","PageTemplate","isDrawerOpen","setIsDrawerOpen","_toggleDrawer","prevActive","prevCases","prevDeaths","prevRecovered","updated","totals","setTotals","_totalData","renderedTotals","yellow","green","siteLinks","icon","paths","name","to","path","dashboard","news","drawerContent","List","activeClassName","exact","ListItem","button","ListItemIcon","ListItemText","primary","CssBaseline","Hidden","mdUp","AppBar","Toolbar","IconButton","clsx","edge","logo","implementation","SwipeableDrawer","ModalProps","keepMounted","onClose","onOpen","open","smDown","Drawer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3ab53e4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4d9c7c17.svg\";","module.exports = __webpack_public_path__ + \"static/media/img-not-available.f228fdd5.png\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.ff349f18.svg\";","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginBottom: theme.spacing(2),\n    width: '100%',\n  },\n  root: {\n    width: '100%',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function DataTable({\n  bodyRows,\n  headCells,\n  initialOrder = 'asc',\n  initialOrderBy = '',\n}) {\n  const classes = useStyles();\n\n  const [order, setOrder] = useState(initialOrder);\n  const [orderBy, setOrderBy] = useState(initialOrderBy);\n  const [page, setPage] = useState(0);\n  const pageSizes = [10, 25, 50];\n  const [rowsPerPage, setRowsPerPage] = useState(pageSizes[0]);\n\n  const _requestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const _changePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const _changeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, bodyRows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            aria-label=\"data table\"\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n          >\n            <DataTableHead\n              cells={headCells}\n              classes={classes}\n              onRequestSort={_requestSort}\n              order={order}\n              orderBy={orderBy}\n            />\n            <TableBody>\n              {_.orderBy(bodyRows, [orderBy], [order])\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(({ id, ...bodyRow }) => {\n                  return (\n                    <TableRow hover key={id} tabIndex={-1}>\n                      {Object.keys(bodyRow).map((bodyCell, index) => {\n                        // Make the first cell in the row a 'th'\n                        const cellProps =\n                          index === 0\n                            ? { component: 'th', scope: 'row' }\n                            : { align: 'right' };\n\n                        return (\n                          <TableCell key={index} {...cellProps}>\n                            {bodyRow[bodyCell]}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          component=\"nav\"\n          count={bodyRows.length}\n          onChangePage={_changePage}\n          onChangeRowsPerPage={_changeRowsPerPage}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={pageSizes}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nfunction DataTableHead({ cells, classes, onRequestSort, order, orderBy }) {\n  const _createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {cells.map(({ id, label }, index) => (\n          <TableCell\n            align={index === 0 ? 'left' : 'right'}\n            key={id}\n            sortDirection={orderBy === id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === id}\n              direction={orderBy === id ? order : 'asc'}\n              onClick={_createSortHandler(id)}\n            >\n              {label}\n              {orderBy === id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ChartLabel,\n  Crosshair,\n  FlexibleWidthXYPlot,\n  HorizontalGridLines,\n  LineSeries,\n  VerticalGridLines,\n  XAxis,\n  YAxis,\n} from 'react-vis';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nconst useStyles = makeStyles(() => ({\n  crosshair: {\n    backgroundColor: grey[900],\n    color: grey[100],\n    minWidth: '150px',\n    padding: '8px 16px',\n  },\n}));\n\nexport default function HistoryChart({ height, history }) {\n  const classes = useStyles();\n\n  const [crosshairValue, setCrosshairValue] = useState(null);\n\n  const _formatDate = date => moment(date).format('MM/DD/YYYY');\n\n  if (!history.length) return null;\n\n  return (\n    <FlexibleWidthXYPlot\n      height={height}\n      onMouseLeave={() => {\n        setCrosshairValue(null);\n      }}\n    >\n      <VerticalGridLines />\n      <HorizontalGridLines />\n      <ChartLabel\n        includeMargin={false}\n        text=\"Date\"\n        xPercent={0.015}\n        yPercent={1.01}\n      />\n      <XAxis tickFormat={_formatDate} tickTotal={5} />\n\n      <ChartLabel\n        includeMargin={false}\n        style={{\n          transform: 'rotate(-90)',\n          textAnchor: 'end',\n        }}\n        text=\"# Cases\"\n        xPercent={0.03}\n        yPercent={0.06}\n      />\n      <YAxis tickFormat={y => numeral(y).format('0a')} tickTotal={5} />\n\n      {history.map(({ timeline: { cases } }) => {\n        const data = Object.keys(cases).map(date => ({\n          x: moment(date).valueOf(),\n          y: cases[date],\n        }));\n\n        return (\n          <LineSeries\n            curve=\"curveMonotoneX\"\n            data={data}\n            onNearestX={d => {\n              setCrosshairValue(d);\n            }}\n            stroke={red[500]}\n          />\n        );\n      })}\n\n      {crosshairValue && (\n        <Crosshair\n          style={{ line: { backgroundColor: grey[500] } }}\n          values={[crosshairValue]}\n        >\n          <Paper className={classes.crosshair}>\n            <Typography component=\"p\" variant=\"body2\">\n              <strong># Cases</strong>:{' '}\n              {numeral(crosshairValue.y).format('0,0')}\n            </Typography>\n            <Typography component=\"p\" variant=\"body2\">\n              <strong>Date</strong>: {_formatDate(crosshairValue.x)}\n            </Typography>\n          </Paper>\n        </Crosshair>\n      )}\n    </FlexibleWidthXYPlot>\n  );\n}\n","import axios from 'axios';\nimport moment from 'moment';\n\n// https://github.com/NovelCOVID/API\nexport const getCountries = async () => await axios.get('/api/countries');\n\nexport const getGEOData = async () => await axios.get('/api/jhucsse');\n\nexport const getTotals = async () => await axios.get('/api/all');\n\nexport const getHistory = async () => await axios.get('/api/v2/historical');\n\n// https://newsapi.org\nexport const getNews = async ({ page = 1 }) =>\n  await axios.get('/covid-news/top-headlines', {\n    params: {\n      apiKey: process.env.REACT_APP_NEWS_API_TOKEN,\n      from: moment().format('YYYY-MM-DD'),\n      page,\n      pageSize: 12,\n      q: 'COVID',\n      sortBy: 'publishedAt',\n    },\n  });\n","import React, { useEffect, useRef, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport RootRef from '@material-ui/core/RootRef';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DataTable from './DataTable';\nimport HistoryChart from './HistoryChart';\nimport { getCountries, getHistory } from './services';\nimport { rootStyles } from './App';\n\nconst historyChartContainerPadding = 8; // 8px\n\nconst useStyles = makeStyles(() => ({\n  divider: {\n    marginBottom: '16px',\n  },\n  header: {\n    marginBottom: '12px',\n  },\n  historyChartContainer: {\n    padding: `${historyChartContainerPadding}px`,\n  },\n  root: {\n    ...rootStyles,\n    backgroundColor: grey[100],\n  },\n  temp: {\n    marginTop: '50px',\n    textAlign: 'center',\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  const [countryTableBodyRows, setCountryTableBodyRows] = useState([]);\n  const [todayTableBodyRows, setTodayTableBodyRows] = useState([]);\n  const todayTableRef = useRef(null);\n  const [history, setHistory] = useState([]);\n\n  // Get data for tables and charts when component mounts\n  useEffect(() => {\n    const _countryData = async () => {\n      const { data } = await getCountries();\n\n      const countryTableData = data.map(\n        ({ active, cases, country, deaths, recovered }) => ({\n          id: country,\n          country,\n          active,\n          deaths,\n          recovered,\n          cases,\n        }),\n      );\n      setCountryTableBodyRows(countryTableData);\n\n      const todayTableData = data.map(\n        ({ country, todayCases, todayDeaths }) => ({\n          id: country,\n          country,\n          todayDeaths,\n          todayCases,\n        }),\n      );\n      setTodayTableBodyRows(todayTableData);\n    };\n\n    const _historyData = async () => {\n      const { data } = await getHistory();\n\n      // TODO: Make graph dynamic. Add date and country filters\n      const historyChartData = data.filter(({ country }) => country === 'usa');\n      setHistory(historyChartData);\n    };\n\n    _countryData();\n    _historyData();\n  }, []); // eslint-disable-line\n\n  const countryTableHeadCells = [\n    { id: 'country', label: 'Country' },\n    {\n      id: 'active',\n      label: 'Active Cases',\n    },\n    { id: 'deaths', label: 'Deaths' },\n    { id: 'recovered', label: 'Recovered' },\n    { id: 'cases', label: 'Total Confirmed' },\n  ];\n  const todayTableHeadCells = [\n    { id: 'country', label: 'Country' },\n    { id: 'todayDeaths', label: 'Deaths' },\n    { id: 'todayCases', label: 'Cases' },\n  ];\n\n  return (\n    <article className={classes.root}>\n      <Container>\n        <Grid container spacing={3}>\n          {/* Today table */}\n          <Grid item xs={12} md={5}>\n            <DashboardHeader>Confirmed Today</DashboardHeader>\n\n            <RootRef rootRef={todayTableRef}>\n              <DataTable\n                bodyRows={todayTableBodyRows}\n                headCells={todayTableHeadCells}\n                initialOrder=\"desc\"\n                initialOrderBy=\"todayCases\"\n              />\n            </RootRef>\n          </Grid>\n\n          {/* History chart */}\n          <Grid item xs={12} md={7}>\n            <DashboardHeader>USA Case History</DashboardHeader>\n\n            <Paper className={classes.historyChartContainer}>\n              <HistoryChart\n                height={\n                  todayTableRef.current\n                    ? todayTableRef.current.offsetHeight -\n                      historyChartContainerPadding * 2\n                    : 300\n                }\n                history={history}\n              />\n            </Paper>\n          </Grid>\n\n          {/* Country overview table */}\n          <Grid item xs={12}>\n            <DashboardHeader>Country Overview</DashboardHeader>\n\n            <DataTable\n              bodyRows={countryTableBodyRows}\n              headCells={countryTableHeadCells}\n              initialOrder=\"desc\"\n              initialOrderBy=\"active\"\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography className={classes.temp} component=\"h3\" variant=\"h6\">\n              More insights coming soon...\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </article>\n  );\n}\n\nfunction DashboardHeader({ children }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography className={classes.header} component=\"h2\" variant=\"h5\">\n        {children}\n      </Typography>\n      <Divider className={classes.divider} />\n    </>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport MapGL, { Layer, Source } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport red from '@material-ui/core/colors/red';\n\nimport { getGEOData } from './services';\n\nexport default function Map() {\n  const [viewport, setViewport] = useState({\n    latitude: 40.67,\n    longitude: -103.59,\n    zoom: 1.5,\n    bearing: 0,\n    pitch: 0,\n  });\n  const [clusterData, setClusterData] = useState(null);\n  const sourceRef = useRef();\n\n  // Get GEO data when component mounts\n  useEffect(() => {\n    const _geoData = async () => {\n      const { data } = await getGEOData();\n      const features = data.map(\n        ({\n          city,\n          coordinates: { latitude, longitude },\n          province,\n          stats: { confirmed, deaths, recovered },\n        }) => {\n          const cases = parseInt(confirmed);\n          const numDeaths = parseInt(deaths);\n          const numRecovered = parseInt(recovered);\n\n          return {\n            geometry: {\n              coordinates: [longitude, latitude],\n              type: 'Point',\n            },\n            properties: {\n              active: cases - deaths - recovered,\n              cases,\n              city,\n              country: 'USA',\n              deaths: numDeaths,\n              recovered: numRecovered,\n              state: province,\n            },\n            type: 'Feature',\n          };\n        },\n      );\n\n      setClusterData({\n        features,\n        type: 'FeatureCollection',\n      });\n    };\n\n    _geoData();\n  }, []);\n\n  const _onViewportChange = updatedViewport => setViewport(updatedViewport);\n\n  const _onClick = event => {\n    if (!(event.hasOwnProperty('features') && event.features[0])) return;\n\n    const feature = event.features[0];\n    const clusterId = feature.properties.cluster_id;\n\n    const mapboxSource = sourceRef.current.getSource();\n\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n      if (err) return;\n\n      _onViewportChange({\n        latitude: feature.geometry.coordinates[1],\n        longitude: feature.geometry.coordinates[0],\n        transitionDuration: 500,\n        viewport,\n        zoom,\n      });\n    });\n  };\n\n  const clusterLayer = {\n    filter: ['all', ['has', 'active'], ['>', 'active', 0]],\n    id: 'cluster-circle',\n    paint: {\n      'circle-color': red[500],\n      'circle-opacity': 0.3,\n      'circle-radius': ['step', ['get', 'active'], 2.5, 50, 15, 375, 20],\n    },\n    source: 'cluster-circle',\n    type: 'circle',\n  };\n\n  return (\n    <MapGL\n      {...viewport}\n      dragRotate={false}\n      height=\"100%\"\n      interactiveLayerIds={[clusterLayer.id]}\n      mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_GL_API_TOKEN}\n      onClick={_onClick}\n      onViewportChange={_onViewportChange}\n      width=\"100%\"\n    >\n      <Source data={clusterData} ref={sourceRef} type=\"geojson\">\n        <Layer {...clusterLayer} />\n      </Source>\n    </MapGL>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport imgNotAvailable from './img-not-available.png';\n\nconst useStyles = makeStyles({\n  action: {\n    display: 'block',\n    padding: '8px',\n    textAlign: 'right',\n  },\n\n  media: {\n    height: '225px',\n  },\n});\n\nexport default function NewsCard({ description, title, url, urlToImage }) {\n  const classes = useStyles();\n\n  return (\n    <Card component=\"section\">\n      <CardMedia\n        className={classes.media}\n        image={urlToImage || imgNotAvailable}\n        title={title}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n      </CardContent>\n\n      <CardActionArea component=\"div\">\n        <Link className={classes.action} color=\"primary\" href={url}>\n          <Button color=\"inherit\" size=\"small\">\n            Read more\n          </Button>\n        </Link>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport _ from 'lodash';\nimport Container from '@material-ui/core/Container';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Waypoint } from 'react-waypoint';\n\nimport NewsCard from './NewsCard';\nimport { rootStyles } from './App';\nimport { getNews } from './services';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    backgroundColor: grey[900],\n    color: grey[100],\n    bottom: '32px',\n    position: 'fixed',\n    right: '48px',\n    '&:hover': {\n      backgroundColor: grey[900],\n    },\n    [theme.breakpoints.down('sm')]: {\n      bottom: '72px',\n      right: '16px',\n    },\n  },\n  newsAPICredit: {\n    textAlign: 'right',\n  },\n  root: {\n    ...rootStyles,\n    backgroundColor: grey[300],\n  },\n}));\n\nexport default function News() {\n  const classes = useStyles();\n\n  const pageRef = useRef(null);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isFabShown, setIsFabShown] = useState(false);\n  const [newsArticles, setNewsArticles] = useState([]);\n\n  // Get news articles when component mounts\n  useEffect(() => {\n    const _newsData = async () => {\n      const {\n        data: { articles },\n      } = await getNews({ page: currentPage });\n\n      setNewsArticles(articles);\n      setCurrentPage(currentPage + 1);\n    };\n\n    _newsData();\n  }, []); // eslint-disable-line\n\n  const _getNextPage = async () => {\n    const {\n      data: { articles },\n    } = await getNews({ page: currentPage });\n\n    setNewsArticles(\n      _.uniqBy([...newsArticles, ...articles], ({ title }) => title),\n    );\n    setCurrentPage(currentPage + 1);\n  };\n\n  const _scrollToTop = () => {\n    pageRef.current.scrollTo(0, pageRef.current.offsetTop);\n  };\n\n  return (\n    <article className={classes.root} ref={pageRef}>\n      <Container>\n        <Grid container spacing={3}>\n          <Waypoint\n            onEnter={() => {\n              setIsFabShown(false);\n            }}\n            onLeave={() => {\n              setIsFabShown(true);\n            }}\n          />\n          <Grid item xs={12}>\n            <Typography className={classes.newsAPICredit} variant=\"body2\">\n              Powered by <Link href=\"https://newsapi.org/\">newsapi.org</Link>\n            </Typography>\n          </Grid>\n          {newsArticles.map((article, index) => (\n            <Grid\n              item\n              key={`${index} - ${article.title}`}\n              xs={12}\n              sm={6}\n              lg={4}\n            >\n              <NewsCard {...article} />\n            </Grid>\n          ))}\n\n          <Waypoint onEnter={_getNextPage} />\n        </Grid>\n      </Container>\n      <Zoom in={isFabShown}>\n        <Fab\n          aria-label=\"scroll back to top\"\n          className={classes.fab}\n          onClick={_scrollToTop}\n        >\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </Zoom>\n    </article>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport biohazard from './biohazard.svg';\n\nconst useStyles = makeStyles(() => ({\n  img: {\n    height: '200px',\n  },\n  notFoundContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  notFoundText: {\n    fontWeight: 'bold',\n    marginTop: '32px',\n  },\n  root: {\n    alignItems: 'center',\n    backgroundColor: grey[100],\n    display: 'flex',\n    justifyContent: 'center',\n\n    flexGrow: 1,\n    height: '100vh',\n    overflowY: 'auto',\n    paddingBottom: '16px',\n    paddingTop: '16px',\n  }, // FIXME: Remove repetition w/ News.js\n}));\n\nexport default function NotFound() {\n  const classes = useStyles();\n\n  return (\n    <article className={classes.root}>\n      <div className={classes.notFoundContainer}>\n        <img alt=\"Page not found\" className={classes.img} src={biohazard} />\n        <Typography\n          className={classes.notFoundText}\n          component=\"h1\"\n          variant=\"h3\"\n        >\n          NOT FOUND\n        </Typography>\n      </div>\n    </article>\n  );\n}\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CountUp from 'react-countup';\nimport numeral from 'numeral';\n\nconst useStyles = makeStyles({\n  content: {\n    paddingLeft: '16px',\n    paddingRight: '16px',\n    paddingTop: '24px',\n    '&:last-child': {\n      paddingBottom: 0,\n    },\n  },\n  count: {\n    fontWeight: 'bold',\n  },\n  pos: {\n    marginBottom: '12px',\n  },\n  root: {\n    backgroundColor: 'transparent',\n    border: 0,\n    boxShadow: 'none',\n    width: '100%',\n  },\n  title: {\n    color: grey[200],\n    fontSize: '16px',\n    marginBottom: 0,\n  },\n});\n\nexport default function CountCard({ count, countColor, prevCount, title }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.content}>\n        <Typography className={classes.title} gutterBottom>\n          {title}\n        </Typography>\n\n        <Typography\n          className={classes.count}\n          component=\"h2\"\n          style={{ color: countColor }}\n          variant=\"h4\"\n        >\n          <CountUp\n            end={count}\n            formattingFn={number => numeral(number).format('0,0')}\n            start={prevCount}\n            useEasing={false}\n          />\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport grey from '@material-ui/core/colors/grey';\n\nconst appBarHeight = '60px';\nconst drawerBgColor = grey[900];\nconst drawerWidth = '240px';\nconst linkColor = grey[100];\nconst logoHeight = '24px';\n\nexport const usePageTemplateStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: blueGrey[900],\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    minHeight: appBarHeight,\n    position: 'fixed',\n    top: 'auto',\n    zIndex: theme.zIndex.drawer + 1,\n  },\n\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden',\n  },\n\n  drawer: {\n    backgroundColor: drawerBgColor,\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n    },\n    [theme.breakpoints.up('md')]: {\n      flexShrink: 0,\n      width: drawerWidth,\n    },\n  },\n\n  drawerLogo: {\n    height: logoHeight,\n    margin: '16px 0',\n  },\n\n  drawerPaper: {\n    backgroundColor: drawerBgColor,\n    position: 'relative',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    [theme.breakpoints.up('md')]: {\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n    },\n  },\n\n  lastUpdated: {\n    color: grey[100],\n    fontSize: '12px',\n    marginTop: '24px',\n    paddingBottom: '16px',\n    paddingLeft: '16px',\n  },\n\n  link: {\n    color: linkColor,\n    display: 'block',\n    textDecoration: 'none',\n  },\n\n  linkActive: {\n    backgroundColor: blueGrey[900],\n  },\n\n  linkIcon: {\n    color: linkColor,\n  },\n\n  links: {\n    marginBottom: 'auto',\n  },\n\n  menuButton: {\n    marginRight: '36px',\n  },\n\n  menuButtonHidden: {\n    display: 'none',\n  },\n\n  root: {\n    display: 'flex',\n  },\n\n  toolbar: {\n    paddingRight: 24, // Keep right padding when drawer closed\n  },\n\n  toolbarLogo: {\n    height: logoHeight,\n    marginLeft: 'auto',\n  },\n}));\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport clsx from 'clsx';\nimport moment from 'moment';\n\nimport logo from './logo.svg';\nimport { paths } from './App';\nimport CountCard from './CountCard';\nimport { getTotals } from './services';\nimport { usePageTemplateStyles } from './PageTemplate.styles';\n\nexport default function PageTemplate({ children }) {\n  const classes = usePageTemplateStyles();\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const _toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  const [totals, setTotals] = useState({\n    active: 0,\n    cases: 0,\n    deaths: 0,\n    prevActive: 0,\n    prevCases: 0,\n    prevDeaths: 0,\n    prevRecovered: 0,\n    recovered: 0,\n    updated: null,\n  });\n\n  // Get total counts when component mounts\n  useEffect(() => {\n    const _totalData = async () => {\n      const {\n        data: { active, cases, deaths, recovered, updated },\n      } = await getTotals();\n\n      setTotals({\n        active,\n        cases,\n        deaths,\n        prevActive: totals.active,\n        prevCases: totals.cases,\n        prevDeaths: totals.deaths,\n        prevRecovered: totals.recovered,\n        recovered,\n        updated,\n      });\n    };\n\n    _totalData();\n  }, []); // eslint-disable-line\n\n  const renderedTotals = [\n    {\n      count: totals.active,\n      countColor: red[500],\n      id: 'total--active',\n      prevCount: totals.prevActive,\n      title: 'Active Cases',\n    },\n    {\n      count: totals.deaths,\n      countColor: yellow[500],\n      id: 'total--deaths',\n      prevCount: totals.prevDeaths,\n      title: 'Deaths',\n    },\n    {\n      count: totals.recovered,\n      countColor: green[400],\n      id: 'total--recovered',\n      prevCount: totals.prevRecovered,\n      title: 'Recovered',\n    },\n    {\n      count: totals.cases,\n      countColor: grey[100],\n      id: 'total--cases',\n      prevCount: totals.prevCases,\n      title: 'Total Confirmed',\n    },\n  ];\n\n  const siteLinks = [\n    {\n      icon: <PublicIcon className={classes.linkIcon} />,\n      text: paths.map.name,\n      to: paths.map.path,\n    },\n    {\n      icon: <DashboardIcon className={classes.linkIcon} />,\n      text: paths.dashboard.name,\n      to: paths.dashboard.path,\n    },\n    {\n      icon: <MenuBookIcon className={classes.linkIcon} />,\n      text: paths.news.name,\n      to: paths.news.path,\n    },\n  ];\n\n  const drawerContent = (\n    <>\n      <List className={classes.links}>\n        {siteLinks.map(({ icon, text, to }) => (\n          <NavLink\n            activeClassName={classes.linkActive}\n            className={classes.link}\n            exact\n            key={to}\n            to={to}\n          >\n            <ListItem button>\n              <ListItemIcon>{icon}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          </NavLink>\n        ))}\n      </List>\n\n      {renderedTotals.map(({ id, ...data }) => (\n        <CountCard key={id} {...data} />\n      ))}\n\n      <Typography className={classes.lastUpdated}>\n        {totals.updated\n          ? `Last Update: ${moment(totals.updated).format('MM/DD/YYYY')} at\n                ${moment(totals.updated).format('h:mmA')}`\n          : 'Finding statistics...'}\n      </Typography>\n    </>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <Hidden mdUp>\n        <AppBar className={classes.appBar}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              aria-label=\"open drawer\"\n              className={clsx(\n                classes.menuButton,\n                isDrawerOpen && classes.menuButtonHidden,\n              )}\n              color=\"inherit\"\n              edge=\"start\"\n              onClick={_toggleDrawer}\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <img alt=\"COVID-19\" className={classes.toolbarLogo} src={logo} />\n          </Toolbar>\n        </AppBar>\n      </Hidden>\n\n      <nav className={classes.drawer} aria-label=\"site navigation\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden mdUp implementation=\"css\">\n          <SwipeableDrawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Used for better performance on mobile\n            }}\n            onClose={_toggleDrawer}\n            onOpen={_toggleDrawer}\n            open={isDrawerOpen}\n            variant=\"temporary\"\n          >\n            {drawerContent}\n          </SwipeableDrawer>\n        </Hidden>\n\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            open\n            variant=\"permanent\"\n          >\n            <img alt=\"COVID-19\" className={classes.drawerLogo} src={logo} />\n            {drawerContent}\n          </Drawer>\n        </Hidden>\n      </nav>\n\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Dashboard from './Dashboard';\nimport Map from './Map';\nimport News from './News';\nimport NotFound from './NotFound';\nimport PageTemplate from './PageTemplate';\n\nimport './App.css';\nimport '../node_modules/react-vis/dist/style.css';\n\nexport const paths = {\n  dashboard: {\n    name: 'Dashboard',\n    path: '/dashboard',\n  },\n  map: {\n    name: 'World Map',\n    path: '/',\n  },\n  news: {\n    name: 'News Feed',\n    path: '/news',\n  },\n};\n\nexport const rootStyles = {\n  flexGrow: 1,\n  height: '100vh',\n  overflowY: 'auto',\n  paddingBottom: '200px',\n  paddingTop: '16px',\n};\n\nfunction App() {\n  return (\n    <Router>\n      <PageTemplate>\n        <Switch>\n          <Route component={Dashboard} exact path={paths.dashboard.path} />\n          <Route component={Map} exact path={paths.map.path} />\n          <Route component={News} exact path={paths.news.path} />\n          <Route component={NotFound} />\n        </Switch>\n      </PageTemplate>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}